<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="aelib_shelf" label="Aelib">
    <memberTool name="blast_to_split"/>
    <memberTool name="ExtractSelected"/>
    <memberTool name="ExtractEach"/>
    <memberTool name="CombineAll"/>
    <memberTool name="MultiReferenceCopy"/>
    <memberTool name="merge"/>
    <memberTool name="wrangle"/>
    <memberTool name="swap"/>
    <memberTool name="snapshot_path"/>
    <memberTool name="ae_HipVersionIncrementer"/>
    <memberTool name="CollectProject"/>
    <memberTool name="Init_RS"/>
    <memberTool name="Clear_RS"/>
    <memberTool name="focused_rs_cam"/>
    <memberTool name="openhip"/>
    <memberTool name="lazyproject"/>
    <memberTool name="Compiled_CopyToPoints"/>
    <memberTool name="OGL+FFmpeg+Wedge"/>
    <memberTool name="Scope All"/>
    <memberTool name="aswaab_cam"/>
  </toolshelf>

  <tool name="blast_to_split" label="Blast to Split" icon="OBJ_geo">
    <script scriptType="python"><![CDATA[for node in hou.selectedNodes():
    if(node.type() == hou.nodeType(hou.sopNodeTypeCategory(), "blast")):
        neg = node.parm("negate").evalAsInt()
        newnode = node.changeNodeType("split", False, True, False, False)
        newnode.parm("negate").set(1-neg)
    ]]></script>
  </tool>

  <tool name="ae_HipVersionIncrementer" label="HIP_Increment" icon="SOP_file">
    <script scriptType="python"><![CDATA[import os, re

def hipIncrementVersion():
    # SETTINGS ==================
    setToFirstFrame = True # Sets playback frame of saved file to first frame (does not affect open file)
    setToManualUpdate = False # Sets update mode of saved file to manual (does not affect open file)
    autoversion = True # If no versioning exists, create a new version
    autoversionzfill = 3 # digit padding for autoversioning
    debug = 0 # print some items to console
    # ===========================

    orighip = hou.hipFile.name()
    hipname = hou.hipFile.basename()
    # hipfile = hipname.split(".")[0]
    # version which works for filenames with periods
    hipfile = os.path.splitext(hipname)[0]
    
    # check current filename for version prefix and split accordingly
    # Uses regex so a filename like myfile_verycool_v001.hip will get picked up correctly (not match the first _v)
    versionSections = ""
    versionType = ""
    if len(re.findall('_v(?=\d+)', hipfile)) > 0:
        versionSections = re.split('_v(?=\d+)', hipfile, 1)        
        versionType = "_v"
    elif len(re.findall('_V(?=\d+)', hipfile)) > 0:
        versionSections = re.split('_V(?=\d+)', hipfile, 1)          
        versionType = "_V"      

    # if no version prefix found, create it
    if versionSections == "":
        if(autoversion):
            versionSections = [hipfile, "0"*autoversionzfill]
            versionType = "_v"
            orighip = orighip.replace(hipfile, hipfile + versionType + "0"*autoversionzfill)
            print "No version found in hip name - Autoversioning"
        else:
            print "No version found in hip name - Exiting"
            return 1

    # regex - match numbers after version splitter. Match until non-numeric value is hit.  
    match = re.match('\d+', versionSections[1])    
    if match:
        versionNumber = match.group(0)
    else:
        print "Problem encountered matching version number - Exiting"
        return 1
    
    # Create new filename
    oldVersion = versionType + versionNumber
    if debug:
        print "Old version: " + oldVersion
    newVersion = versionType + str(int(versionNumber) + 1).zfill(len(versionNumber))
    newhip = orighip.replace(oldVersion, newVersion)
    if debug:    
        print "New file: " + newhip
        
    # ===================================
    # set MVSM_VERSION
    # ===================================
    newver = str(int(versionNumber)+1).zfill(3)
    hou.putenv('MVSM_VERSION', newver)
        
    # Save the file
    confirm = 0
    if os.path.isfile(newhip) :
        text = "Overwrite existing hip file?"
        confirm = hou.ui.displayMessage(text, buttons=("Yes", "No"), severity=hou.severityType.Message, title="New Hip")
    if confirm == 0 :
        # update mode and frame settings
        updateMode = hou.updateModeSetting()
        frame = hou.frame()
        if (setToManualUpdate):
            hou.setUpdateMode(hou.updateMode.Manual)
        if (setToFirstFrame):
            # hou.setFrame(1)
            hou.setFrame(hou.playbar.playbackRange()[0])
            
        hou.hipFile.save(newhip)
        # reset update mode and frame
        hou.setUpdateMode(updateMode)
        hou.setFrame(frame)

hipIncrementVersion()]]></script>
    <keywordList>
      <keyword>aelib</keyword>
    </keywordList>
  </tool>

  <tool name="ExtractSelected" label="ExtractSelected" icon="SHELF_extract_object">
    <script scriptType="python"><![CDATA[sel = hou.selectedNodes()
pname = sel[0].parent().name()

geo = hou.node('/obj').createNode('geo', pname+'_extraction')
geo.node('file1').destroy()
geo.moveToGoodPosition()

merge = geo.createNode('merge', 'MERGE')
for ind, node in enumerate(sel):
    null = node.createOutputNode("null", "OUT_"+node.name())
    path = null.path()
    name = node.name()
    
    pn = node.parent().name()
    o = merge.createInputNode(ind, 'object_merge', pn+"_"+name)
    o.parm("objpath1").set(path)
    o.moveToGoodPosition()

merge.moveToGoodPosition()
merge.setCurrent(True, True)]]></script>
  </tool>

  <tool name="CombineAll" label="CombineAllVisible" icon="SHELF_combine_objects">
    <script scriptType="python"><![CDATA[node_type = hou.nodeType(hou.objNodeTypeCategory(), 'geo')
objnodes = node_type.instances()

geo = hou.node('/obj').createNode('geo', 'CombineAll')
geo.node('file1').destroy()
geo.moveToGoodPosition()
merge = geo.createNode('merge', 'MERGE')

for ind, node in enumerate(objnodes):
    if(node.isDisplayFlagSet()):
        path = node.path()
        name = node.name()
        o = merge.createInputNode(ind, 'object_merge', name+"_merge")
        o.parm("objpath1").set(path)
        o.moveToGoodPosition()

merge.moveToGoodPosition()
merge.setCurrent(True, True)]]></script>
  </tool>

  <tool name="MultiReferenceCopy" label="MultiRefCopy" icon="SOP_duplicate">
    <script scriptType="python"><![CDATA[# Creates ref copies of nodes with absolute path references so they can be moved outside the current parent

sel = hou.selectedNodes()
tup = tuple(sel)

p = sel[0].parent()
p.copyItems(tup, True, False)]]></script>
  </tool>

  <tool name="merge" label="Merge" icon="hicon:/SVGIcons.index?SOP_merge.svg">
    <script scriptType="python"><![CDATA[nodes = hou.selectedNodes()
parent = nodes[0].parent()

merge = parent.createNode("merge")

for node in nodes:
    if(node.type().category() == hou.sopNodeTypeCategory()):
        merge.setNextInput(node)
    elif(node.type().category() == hou.dopNodeTypeCategory()):
        merge.setNextInput(node)
    
merge.moveToGoodPosition(True, False, True, True) 

try:
    merge.setSelected(True, True, False)   
    merge.setRenderFlag(True) # turn this off if u want
    merge.setDisplayFlag(True)
except:
    merge.setDisplayFlag(False)
    pass # dop merge case]]></script>
  </tool>

  <tool name="wrangle" label="Wrangle" icon="hicon:/SVGIcons.index?SOP_attribwrangle.svg">
    <script scriptType="python"><![CDATA[# TODO insert into stream if the node has an ouput

sel = hou.selectedNodes()
if sel:
    node = hou.selectedNodes()[0]
    if node.type().category() == hou.sopNodeTypeCategory():
        parent = node.parent()
        wrangle = parent.createNode("attribwrangle")
        wrangle.setNextInput(node)
        wrangle.moveToGoodPosition(True, False, True, True) 
        wrangle.setSelected(True, True, False)  
        wrangle.setDisplayFlag(True)
        wrangle.setRenderFlag(True)]]></script>
  </tool>

  <tool name="ExtractEach" label="ExtractEach" icon="SHELF_extract_object">
    <script scriptType="python"><![CDATA[sel = hou.selectedNodes()
pname = sel[0].parent().name()

for ind, node in enumerate(sel):
    null = node.createOutputNode("null", "OUT_" + node.name())
    path = null.path()
    pn = node.parent().name()
    
    geo = hou.node('/obj').createNode('geo', pn + '_' + null.name() + '_extraction')
    geo.node('file1').destroy()
    geo.moveToGoodPosition()    
    
    o = geo.createNode('object_merge', pn + "_" + null.name())
    o.parm("objpath1").set(path)
    o.moveToGoodPosition()

# o.setCurrent(True, True)]]></script>
  </tool>

  <tool name="swap" label="Swap Nodes" icon="hicon:/SVGIcons.index?BUTTONS_cook.svg">
    <script scriptType="python"><![CDATA[# TODO 
# swap multiple outputs .. messy

nodes = hou.selectedNodes()

if len(nodes) == 2 or len(nodes) == 1:
    # if 1 node selected, move up the graph if it has an input, otherwise move it down 
    if(len(nodes) == 1):
        b = nodes[0]
        bin = b.inputs()
        if bin:
            a = bin[0]
        else:
            a, b = b, b.outputs()[0]
    else:
    # if 2 nodes selected, ensure a is always the higher node in the nodegraph 
        a = nodes[0]
        b = nodes[1]
        a_anc = a.inputAncestors(True, False)
        if b in a_anc:
            a, b = b, a
    
    ain = a.inputs()
    aout = a.outputs()
    bin = b.inputs()
    bout = b.outputs() 
    
    # get output connections of A/B which will be swapped    
    aout_conn = a.outputConnections()
    consa = [[c.outputNode(), c.inputIndex()] for c in aout_conn]     
    bout_conn = b.outputConnections()
    consb = [[c.outputNode(), c.inputIndex()] for c in bout_conn] 
        
    # set inputs/outputs
    AIN = ain[0] if ain else None
    AOUT = aout[0] if aout else None
    BIN = bin[0] if bin else None
    BOUT = bout[0] if bout else None
    
    # Swap, with case for a and b sequential. only first inputs/outputs modified at this time
    if BIN == a:
        b.setInput(0, AIN)
        a.setInput(0, b)    
        #if BOUT: BOUT.setInput(0, a)          
        for it in consb:
            it[0].setInput(it[1], a)
            # print it[0].name() + "__" + it[1]
    else:     
        b.setInput(0, AIN)
        a.setInput(0, BIN)
        if BOUT:
            BOUT.setInput(0, a)
            for it in consb:
                it[0].setInput(it[1], a)           
        if AOUT:
            AOUT.setInput(0, b)
            for it in consa:
                it[0].setInput(it[1], a)                    
           
    # set node positions
    apos = a.position()
    bpos = b.position()        
    b.setPosition(apos)
    a.setPosition(bpos)]]></script>
  </tool>

  <tool name="snapshot_path" label="SaveSnapshot" icon="hicon:/SVGIcons.index?BUTTONS_render.svg">
    <script scriptType="python"><![CDATA[from datetime import datetime

# ipr = hou.ui.paneTabOfType(hou.paneTabType.IPRViewer) # this doesnt actually work for some reason...There are 2 iprs?
tabs = hou.ui.currentPaneTabs()
for tab in tabs:
    if isinstance(tab, hou.IPRViewer):
        ipr = tab
        
if ipr:
    # time = datetime.now().strftime("%d-%b-%H-%M-%S")
    time2 = datetime.now().strftime("%y%m%d-%H%M%S")
    # path = "$HIP/ipr/$HIPNAME-" + time + ".png"
    path = "$HIP/ipr/" + time2 + "-$HIPNAME-" + ".png"
    path = hou.expandString(path)
    save = ipr.saveFrame(path)

    # Broken. When it's fixed get the right snapshot?
    # ipr.saveFrame(path, snapshot=0, xres=-1, yres=-1, color='C', alpha='C', scope='*', lut='', gamma=1.0, convert=True)]]></script>
  </tool>

  <tool name="Init_RS" label="Init_RS" icon="ROP_Redshift_ROP">
    <script scriptType="python"><![CDATA[import hou
import aeutils as ae

ae.init_RS()

]]></script>
  </tool>

  <tool name="CollectProject" label="Collect Project" icon="hicon:/SVGIcons.index?NETVIEW_vex_cached_badge.svg">
    <script scriptType="python"><![CDATA[import hou, os, re, sys
import shutil
import glob
from PySide2.QtGui import *
from PySide2.QtWidgets import *
from PySide2.QtCore import *

# TODO
# Currently this will ignore non-HIP/JOB refs on DOP nodes
# For non-rel files, place images in /tex, geometry in /geo etc rather than /misc?
# Won't work with $WEDGE/$WEDGENUM and probably $ACTIVETAKE

# ===========================================
# Initial Settings Dialog
# ===========================================
class collectSettingsDialog(QDialog):
    def __init__(self, parent=None):
        super(collectSettingsDialog, self).__init__()
        self.setWindowTitle("Project Collection Settings")             
        self.setGeometry(300, 300, 400, 100)
        
        sh = hou.ui.qtStyleSheet()
        self.setStyleSheet(sh)
        
        layout = QVBoxLayout()     
        layout.setSpacing(5)        
        layout.setSizeConstraint(QLayout.SetMinimumSize)

        # Checkboxes
        self.ch_a = QCheckBox("Ignore References on Bypassed Nodes")
        self.ch_a .setChecked(True)
        layout.addWidget(self.ch_a)
        
        self.ch_b = QCheckBox("Resolve references outside $HIP/$JOB")
        self.ch_b.setChecked(True)
        layout.addWidget(self.ch_b)             
        
        self.ch_c = QCheckBox("Ignore render proxies (.ifd/.ass/.rs)")
        self.ch_c.setChecked(True)
        layout.addWidget(self.ch_c)   
        
        self.ch_d = QCheckBox("Delete non-Displayed OBJ nodes")
        self.ch_d.setChecked(False)
        layout.addWidget(self.ch_d)    
        
        # Extras TODO
        # Splitter
        line = QFrame()
        line.setFrameShape(QFrame.HLine)
        line.setMinimumSize(0, 20)             
        layout.addWidget(line)      
        
        # Disable archiving
        self.ch_archive = QCheckBox("Disable Archival (Non-HIP/JOB files are just copied to $HIP/misc)")
        self.ch_archive.setChecked(False)
        layout.addWidget(self.ch_archive)    
        
        # File type list
        self.ch_filetype = QCheckBox("File Type Filter (Whitelist)")
        self.ch_filetype.setChecked(False)         

        layout_form = QFormLayout();    
        self.ext = QLineEdit("jpg png exr hdr tiff")
        layout_form.addRow(self.ch_filetype, self.ext);
        self.ext.setEnabled(False)
        layout.addLayout(layout_form)
        # Connect enable/disable to the checkbox
        self.ch_filetype.toggled.connect(self.ext.setEnabled)
                                                
        # ButtonBox
        bbox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)    
        bbox.setCenterButtons(True)
        bbox.setMinimumSize(0, 40)   
        bbox.accepted.connect(self.accept)
        bbox.rejected.connect(self.reject)
        layout.addWidget(bbox)
                      
        self.setLayout(layout)      
                
        # Style all checkboxes test
#        cbs = self.findChildren(QCheckBox)        
#        for w in cbs:
#                w.setStyleSheet("""QCheckBox::checked {
#                color: #00FF00;
#                }""")        
                
                     
    def getValues(self):
        return [self.ch_a.isChecked(), self.ch_b.isChecked(), self.ch_c.isChecked(), self.ch_d.isChecked(), self.ch_archive.isChecked(), self.ch_filetype.isChecked(), self.ext.text()]   
        
# ==============================================================
# Create collection dir in $HIP and avoid overwriting existing
# ==============================================================
def createCollectionDir():
    collectDir = '$HIP'+'/collect'
    counter = 1
    while os.path.exists(hou.expandString(collectDir)) :
        collectDir = '$HIP'+'/collect' + str(counter)
        counter = counter + 1
    collectDir = hou.expandString(collectDir)
    os.makedirs(collectDir)
    return collectDir

def getObjParent(node):
    if isinstance(node, hou.ObjNode):
        return node
    parent = node.parent()
    if not parent:
        return None
    return getObjParent(parent)
    
# copying with larger buffer for better performance?    
def fastCopy(src, dst):
    with open(src, 'rb') as fin:
        with open(dst, 'wb') as fout:
            shutil.copyfileobj(fin, fout, 128*1024)
    
def collectProject(settings):
    IGNORE_BYPASSED = settings[0]
    COPY_NON_RELATIVE = settings[1]
    IGNORE_PROXY = settings[2]
    IGNORE_NONDISPLAY = settings[3]
    DISABLE_ARCHIVE = settings[4]
    FILETYPE_FILTER = settings[5]
    FILETYPES = settings[6]
    
    # save the file, then save it to the collection dir later?
    # hou.setUpdateMode(hou.updateMode.Manual)        
    hou.setFrame(hou.playbar.playbackRange()[0])    
    
    hou.hipFile.save()
    hipname = hou.hipFile.basename()    
    refs = hou.fileReferences()
    
    if DISABLE_ARCHIVE:
        collectDir = hou.expandString('$HIP')
    else:
        collectDir = createCollectionDir()
    
    # ignore archived/proxy files
    proxy = ['.ifd', '.ass', '.rs']
    # ignore refs with these extensions for refs not in $HIP or $JOB
    ignoredExt = ['.hda', '.hdalc', '.hdanc', '.otl', '.pc', '.pmap', '.simdata', '.h']       
    # filetype whitelist 
    if FILETYPE_FILTER:
        extfilter = ['.' + x for x in FILETYPES.split()]
        
    # TODO Also delete non-displayed OBJ nodes when they are ignored?
    toDel = []
    # Get refs to be copied
    toCopy = []
    toCopyMisc = [] # for non-HIP/JOB files to sort out
    for ref in refs:
        parm = ref[0]
        r = ref[1]
        if parm:
            for i in xrange(10): # hack to get referenced parm since isRef is not implemented?
                parm = parm.getReferencedParm()                
            bypassed = parm.node().isGenericFlagSet(hou.nodeFlag.Bypass)
            # Testing for display flag. Could also apply to DOPs but maybe a bad idea..
            disp = True
            if isinstance(parm.node(), hou.SopNode):
                top = getObjParent(parm.node())
                if top:
                    disp = top.isGenericFlagSet(hou.nodeFlag.Display)  
            #
            if IGNORE_NONDISPLAY and not disp:
                toDel.append(top)
            # copy ref if bypass option is off or node isnt bypassed                  
            elif IGNORE_BYPASSED and bypassed:
                pass
            # copy ref if proxy filter off or ref extension isnt a render proxy                
            elif IGNORE_PROXY and os.path.splitext(r)[1] in proxy:
                pass
            else:
                fname, fext = os.path.splitext(ref[1])
                # check for file extension filter
                if not FILETYPE_FILTER or fext in extfilter:
                    if not (r.startswith('$HIP') or r.startswith('$JOB')):
                        if COPY_NON_RELATIVE and fext not in ignoredExt:
                            # Ignore Dop Nodes for now? Also ignore op: refs?
                            if not isinstance(parm.node(), hou.DopNode) and not r.startswith('op'):
                                toCopyMisc.append(ref)    
                    elif not DISABLE_ARCHIVE:
                        toCopy.append(ref) 
    
    # Delete Non-Displayed
    if IGNORE_NONDISPLAY:
        randomNode = hou.node("/").children()[0]
        randomNode.deleteItems(toDel)
                    
    # Create Progress Bar
    numToCopy = len(toCopy) + len(toCopyMisc)
    pbar = QProgressDialog("Copying Files", "Abort", 0, numToCopy);
    pbar.setWindowTitle("Collect Progress")  
    pbar.setWindowModality(Qt.WindowModal);        
    pbar.setStyleSheet(hou.ui.qtStyleSheet())
    l = pbar.layout()
    if l:
        l.setSizeConstraint(QLayout.SetMaximumSize)
    pbar.setValue(0)        
    pbar.forceShow()
                       
    # ==============================================================
    # Copy Relative files HIP/JOB
    # ==============================================================
    if not DISABLE_ARCHIVE:
        for ref in toCopy:
            r = ref[1]
            
            # Increment Progress bar. This seems to show the previous item??
            pbar.setValue(pbar.value()+1)
            pbar.setLabelText(r)
            if pbar.wasCanceled():
                break        
            
            # Check if the the ref is linked to another channel. If so, expand that channel value instead (to fix $OS references?)
            parm = ref[0]
            for i in xrange(10): # hack since isRef is not implemented?
                parm = parm.getReferencedParm() 
            r = re.sub('\$OS', parm.node().name(), r)
            
            p = r[4:]
            collectedPath = collectDir + p  
            # ensure the subdir exists in the collect dir        
            collectedDir = os.path.dirname(hou.expandString(collectedPath))
            if not os.path.exists(collectedDir):
                os.makedirs(collectedDir)       
                     
            # Copy Sequences
            if re.search('\$F', r):
                s = re.sub('\$F\d+', '*', r)
                s = re.sub('\$F', '*', s)
                print "$HIP/$JOB Sequence found:" + hou.expandString(s) 
                seqFiles = glob.glob(hou.expandString(s))
                if seqFiles:
                    for f in seqFiles:
                        try:
                            copiedFilePath = collectedDir + '/' + os.path.basename(f)                    
                            if not os.path.exists(copiedFilePath):
                                shutil.copy(hou.expandString(f), copiedFilePath) 
                        except:
                            pass
                else:
                    print "Error Finding File Sequence - No items copied"
            # Copy Single Files
            else:
                try:
                    print "$HIP/$JOB File found:" + str(r)
                    if not os.path.exists(collectedPath):
                        shutil.copy(hou.expandString(r), collectedPath)             
                except Exception as e:
                    pass
                    # print(e)   
    
    # save to new loc and sort the non-HIP/JOB refs after saving?   
    hou.hipFile.save(collectDir+'/'+hipname)        
        
    # ==============================================================
    # Copy NON Relative files and adjust their parms
    # ==============================================================   
    
    # Debugging
    DEBUG = False
    if DEBUG:
        print toCopyMisc
        print collectDir
    
    if COPY_NON_RELATIVE and not DEBUG:
        # Create misc dir
        collectedMisc = ""
        if toCopyMisc:
            collectedMisc = collectDir + '/misc'
            if not os.path.exists(collectedMisc):
                    os.makedirs(collectedMisc)         
    
        for ref in toCopyMisc:
            r = ref[1]

            # Increment Progress bar. This seems to show the previous item??
            pbar.setValue(pbar.value()+1)
            pbar.setLabelText(r)
            if pbar.wasCanceled():
                break        
            
            # Check if the the ref is linked to another channel. If so, expand that channel value instead (to fix $OS references?)
            parm = ref[0]
            for i in xrange(10): # hack since isRef is not implemented?
                parm = parm.getReferencedParm() 
            r = re.sub('\$OS', parm.node().name(), r)
                         
            # Copy Sequences
            if re.search('\$F', r):                
                s = re.sub('\$F\d+', '*', r)
                s = re.sub('\$F', '*', s)
                print "Non-$HIP/$JOB Sequence found:" + hou.expandString(s) 
                seqFiles = glob.glob(hou.expandString(s))
                if seqFiles:
                    try:
                        l = parm.expression()
                        print "not adjusting parm value as it contains an expression"                             
                        # set new parm value (with correct unexpanded $F string?)
                    except:
                        try:
                            parm.set('$HIP/misc/'+ os.path.basename(r))                
                        except:
                            print "unable to change parm: "+parm.path()                   
                    for f in seqFiles:
                        try:
                            copiedFilePath = collectedMisc + '/' + os.path.basename(f)                    
                            if not os.path.exists(copiedFilePath):
                                shutil.copy(hou.expandString(f), copiedFilePath) 
                        except:
                            pass
                else:
                    print "Error Finding File Sequence - No items copied"
            # Copy Single Files
            else:
                filename = os.path.basename(hou.expandString(r))
                collectedMiscTemp = collectedMisc + '/' + filename  
                # try to set new parm value
                try:
                    l = parm.expression()        
                    print "not adjusting parm value as it contains an expression"                              
                except:
                    try:
                        parm.set('$HIP/misc/'+filename)
                    except:
                        print "unable to change parm: "+parm.path()
                try:
                    print "Non-$HIP/$JOB File found:" + str(r)                 
                    if not os.path.exists(collectedMiscTemp):
                        fastCopy(hou.expandString(r), collectedMiscTemp)
                        #shutil.copy(hou.expandString(r), collectedMiscTemp)  
                        # use system / subprocess?
#                        if sys.platform == 'win32':
#                            # this pops up a window for some reason..?
#                            os.system('xcopy "%s" "%s"' % (hou.expandString(r), collectedMiscTemp))
#                        else:
#                            shutil.copy(hou.expandString(r), collectedMiscTemp)
                except Exception as e:
                    pass
                    # print(e)          
    # set JOB to new HIP loc
    hou.putenv('$JOB', collectDir)

dialog = collectSettingsDialog()
dialog.exec_()
if dialog.result() == 1:
    settings = dialog.getValues()
    collectProject(settings)    
else:
    pass
    # print "Collect Project Cancelled"]]></script>
  </tool>

  <tool name="openhip" label="Open HIP Folder" icon="hicon:/SVGIcons.index?DATATYPES_bundle.svg">
    <script scriptType="python"><![CDATA[import os
import hou
import sys
import subprocess

hip = hou.getenv('HIP')

platform = sys.platform
if platform == "win32":
    # subprocess.Popen(["explorer", self.job])
    os.startfile(hip)
elif platform == "darwin": #osx
    subprocess.Popen(["open", hip])
else: #linux
    subprocess.Popen(["xdg-open", hip])
]]></script>
  </tool>

  <tool name="Clear_RS" label="Clear RS" icon="hicon:/SVGIcons.index?PARTS_delete_x.svg">
    <script scriptType="python"><![CDATA[import hou

rem = ['Redshift', 'redshift', 'RS', 'rs']

allNodes = hou.node('/').allSubChildren()
for n in allNodes:
    try:
        type = n.type().name()
        # print type
        # if any (x in type for x in rem):
        if any (type.startswith(x) for x in rem):
            try:
                n.destroy()
            except: pass
                # print "couldnt delete node as inside locked parent"
    except: pass
        # print "node has destroyed already by parent deletion"

        
# Still can't get the RS hscript commands working from python
#objnodes = hou.node('/obj').children()
#for o in objnodes:
#    n.setCurrent(True, True)
#    rs = hou.hscript('Redshift_removeObjectSpareParameters')
#    print rs]]></script>
  </tool>

  <tool name="lazyproject" label="Lazy Project Create" icon="hicon:/SVGIcons.index?DATATYPES_bundle.svg">
    <script scriptType="python"><![CDATA[import hou, os, re, sys
import shutil
import glob
from PySide2.QtGui import *
from PySide2.QtWidgets import *
from PySide2.QtCore import *

# Create Dirs at HIP if they dont exist
class Lazyproj(QDialog):
    def __init__(self, parent=None):
        super(Lazyproj, self).__init__()
        self.setWindowTitle("Project Collection Settings")             
        self.setGeometry(400, 200, 400, 100)
        
        self.setStyleSheet(hou.ui.qtStyleSheet())
        layout = QVBoxLayout()        
        layout.setSizeConstraint(QLayout.SetMinimumSize)
        
        # File type list
        self.label_dirs = QLabel("Directories to Create")      
        self.dirs = QLineEdit("abc geo tex render flip comp")
        layout_form = QFormLayout()        
        layout_form.addRow(self.label_dirs, self.dirs)
        layout.addLayout(layout_form)
  
        # ButtonBox
        bbox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)    
        bbox.setCenterButtons(True)
        bbox.setMinimumSize(0, 40)   
        bbox.accepted.connect(self.makeDirs)
        bbox.rejected.connect(self.reject)
        layout.addWidget(bbox)
                      
        self.setLayout(layout)              
        
    def makeDirs(self):
        createdirs = [x for x in self.dirs.text().split()]        
        hip = hou.expandString('$HIP')
        for d in createdirs:
            dd = hip + "/" + d
            if not os.path.exists(dd):
                os.makedirs(dd)         
        hou.putenv('$JOB', hip)        
        super(Lazyproj, self).accept()                              
                        
dialog = Lazyproj()
dialog.exec_()        ]]></script>
  </tool>

  <tool name="Compiled_CopyToPoints" label="Compiled_CopyToPoints" icon="hicon:/SVGIcons.index?SOP_foreach.svg">
    <toolMenuContext name="network">
      <contextOpType>Sop/compile_begin</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('block_begin'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_compile_begin2 (Sop/compile_begin)
set _obj_geo1_compile_begin2 = `run("opadd -e -n -v compile_begin compile_begin2")`
oplocate -x `$arg2 + -2.6615529276545047` -y `$arg3 + 0.027349291519179086` $_obj_geo1_compile_begin2
opparm -V 16.5.405 $_obj_geo1_compile_begin2 blockpath ( ../compile_end1 )
opcolor -c 0.75 0.75 0 $_obj_geo1_compile_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_compile_begin2
opexprlanguage -s hscript $_obj_geo1_compile_begin2
opuserdata -n '___Version___' -v '16.5.405' $_obj_geo1_compile_begin2
opset -p on $_obj_geo1_compile_begin2
opcf $arg1

# Node $_obj_geo1_foreach_end2 (Sop/block_end)
set _obj_geo1_foreach_end2 = `run("opadd -e -n -v block_end foreach_end2")`
oplocate -x `$arg2 + 0` -y `$arg3 + -4.5303117513782833` $_obj_geo1_foreach_end2
opparm -V 16.5.405 $_obj_geo1_foreach_end2 itermethod ( pieces ) method ( merge ) useattrib ( off ) blockpath ( ../foreach_begin2 ) templatepath ( ../foreach_begin2 ) multithread ( on )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end2
opexprlanguage -s hscript $_obj_geo1_foreach_end2
opset -p on $_obj_geo1_foreach_end2
opcf $arg1

# Node $_obj_geo1_foreach_begin2 (Sop/block_begin)
set _obj_geo1_foreach_begin2 = `run("opadd -e -n -v block_begin foreach_begin2")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.0856999948620796` $_obj_geo1_foreach_begin2
opparm -V 16.5.405 $_obj_geo1_foreach_begin2 method ( piece ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin2
opexprlanguage -s hscript $_obj_geo1_foreach_begin2
opuserdata -n '___Version___' -v '16.5.405' $_obj_geo1_foreach_begin2
opset -p on $_obj_geo1_foreach_begin2
opcf $arg1

# Node $_obj_geo1_compile_end1 (Sop/compile_end)
set _obj_geo1_compile_end1 = `run("opadd -e -n -v compile_end compile_end1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -5.616011742515072` $_obj_geo1_compile_end1
opcolor -c 0.75 0.75 0 $_obj_geo1_compile_end1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_compile_end1
opexprlanguage -s hscript $_obj_geo1_compile_end1
opset -p on $_obj_geo1_compile_end1
opcf $arg1

# Node $_obj_geo1_compile_begin1 (Sop/compile_begin)
set _obj_geo1_compile_begin1 = `run("opadd -e -n -v compile_begin compile_begin1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_compile_begin1
opparm -V 16.5.405 $_obj_geo1_compile_begin1 blockpath ( ../compile_end1 )
opcolor -c 0.75 0.75 0 $_obj_geo1_compile_begin1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_compile_begin1
opexprlanguage -s hscript $_obj_geo1_compile_begin1
opuserdata -n '___Version___' -v '16.5.405' $_obj_geo1_compile_begin1
opset -p on $_obj_geo1_compile_begin1
opcf $arg1

# Node $_obj_geo1_copytopoints1 (Sop/copytopoints)
set _obj_geo1_copytopoints1 = `run("opadd -e -n -v copytopoints copytopoints1")`
oplocate -x `$arg2 + -0.0016000135219655931` -y `$arg3 + -3.3764705944490778` $_obj_geo1_copytopoints1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_copytopoints1
opexprlanguage -s hscript $_obj_geo1_copytopoints1
opset -p on $_obj_geo1_copytopoints1
opcf $arg1

# Node $_obj_geo1_foreach_begin3 (Sop/block_begin)
set _obj_geo1_foreach_begin3 = `run("opadd -e -n -v block_begin foreach_begin3")`
oplocate -x `$arg2 + -2.6615529276545047` -y `$arg3 + -1.0583507033429005` $_obj_geo1_foreach_begin3
opparm -V 16.5.405 $_obj_geo1_foreach_begin3 method ( input ) blockpath ( ../foreach_end2 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin3
opexprlanguage -s hscript $_obj_geo1_foreach_begin3
opuserdata -n '___Version___' -v '16.5.405' $_obj_geo1_foreach_begin3
opset -p on $_obj_geo1_foreach_begin3

opcf $arg1
opwire -n $_obj_geo1_noise_ql1 -0 $_obj_geo1_compile_begin2
opcf $arg1
opwire -n $_obj_geo1_copytopoints1 -0 $_obj_geo1_foreach_end2
opcf $arg1
opwire -n $_obj_geo1_compile_begin1 -0 $_obj_geo1_foreach_begin2
opcf $arg1
opwire -n $_obj_geo1_foreach_end2 -0 $_obj_geo1_compile_end1
opcf $arg1
opwire -n $_obj_geo1_scatter3 -0 $_obj_geo1_compile_begin1
opcf $arg1
opwire -n $_obj_geo1_foreach_begin3 -0 $_obj_geo1_copytopoints1
opwire -n $_obj_geo1_foreach_begin2 -1 $_obj_geo1_copytopoints1
opcf $arg1
opwire -n $_obj_geo1_compile_begin2 -0 $_obj_geo1_foreach_begin3

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_compile_end1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_compile_begin1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="OGL+FFmpeg+Wedge" label="OGL+FFmpeg+Wedge" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextNetType>ROP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('ae::FFmpegify::1'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_out_opengl1 (Driver/opengl)
set _out_opengl1 = `run("opadd -e -n -v opengl opengl1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_out_opengl1
chblockbegin
chadd -t 0 0 $_out_opengl1 f1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_out_opengl1/f1
chadd -t 0 0 $_out_opengl1 f2
chkey -t 0 -v 240 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_out_opengl1/f2
chblockend
opparm -V 16.5.405 $_out_opengl1 trange ( normal ) f ( f1 f2 1 ) stdswitch ( 1 1 1 1 1 1 ) picture ( '$HIP/flip/$HIPNAME/$WEDGENUM/$HIPNAME.$F4.png' ) gamma ( 2.2000000000000002 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_opengl1
opexprlanguage -s hscript $_out_opengl1
opuserdata -n '___Version___' -v '16.5.405' $_out_opengl1
opset -p on $_out_opengl1
opcf $arg1

# Node $_out_wedge1 (Driver/wedge)
set _out_wedge1 = `run("opadd -e -n -v wedge wedge1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -3.0000010000000001` $_out_wedge1
opparm $_out_wedge1  wedgeparams ( 1 )
chblockbegin
chadd -t 0 0 $_out_wedge1 steps1
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("range1y")+1' $_out_wedge1/steps1
chblockend
opparm $_out_wedge1 random ( off ) wedgeparams ( 1 ) range1 ( 0 5 ) steps1 ( steps1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_wedge1
opexprlanguage -s hscript $_out_wedge1
opuserdata -n '___Version___' -v '' $_out_wedge1
opset -p on $_out_wedge1
opcf $arg1

# Node $_out_batch1 (Driver/batch)
set _out_batch1 = `run("opadd -e -n -v batch batch1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.0000000000000002` $_out_batch1
opparm -V 16.5.405 $_out_batch1 fullrange ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_batch1
opexprlanguage -s hscript $_out_batch1
opuserdata -n '___Version___' -v '16.5.405' $_out_batch1
opset -p on $_out_batch1
opcf $arg1

# Node $_out_FFmpegify1 (ae::Driver/FFmpegify::1)
set _out_FFmpegify1 = `run("opadd -e -n -v ae::FFmpegify::1 FFmpegify1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.0000010000000001` $_out_FFmpegify1
chblockbegin
chadd -t 0 0 $_out_FFmpegify1 path
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.phm().autoPath(hou.node(\'.\'))' -l p $_out_FFmpegify1/path
chadd -t 0 0 $_out_FFmpegify1 fps
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FPS' $_out_FFmpegify1/fps
chadd -t 0 0 $_out_FFmpegify1 cmd
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'hou.phm().cmd(hou.node(\'.\'))' -l p $_out_FFmpegify1/cmd
chblockend
opparm $_out_FFmpegify1 save_adjacent ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_out_FFmpegify1
opexprlanguage -s hscript $_out_FFmpegify1
opuserdata -n '___Version___' -v '' $_out_FFmpegify1
opset -p on $_out_FFmpegify1

opcf $arg1
opcf $arg1
opwire -n $_out_FFmpegify1 -0 $_out_wedge1
opcf $arg1
opwire -n $_out_opengl1 -0 $_out_batch1
opcf $arg1
opwire -n $_out_batch1 -0 $_out_FFmpegify1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_out_FFmpegify1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_out_opengl1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="focused_rs_cam" label="Focused RS Cam" icon="hicon:/SVGIcons.index?TOOLS_view.svg">
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('null'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_cam_1080 (Object/cam)
set _obj_cam_1080 = `run("opadd -e -n -v cam cam_1080")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_cam_1080
opspareds '    group {         name    "stdswitcher3"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             invisible             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             invisible             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Render"          parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }     }      group {         name    "stdswitcher3_2"         label   "View"          parm {             name    "iconscale"             label   "Icon Scale"             type    float             default { "1" }             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "res"             label   "Resolution"             type    intvector2             joinnext             size    2             default { "1280" "720" }             range   { -1 1 }             parmtag { "cook_dependent" "1" }             parmtag { "spare_category" "View" }         }         parm {             name    "resMenu"             label   "Choose Resolution"             type    button             nolabel             default { "0" }             menumini {                 [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBres\')\\")`" ]             }             parmtag { "script_callback" "opparm . res ( `arg(\\"$script_value\\", 0)` `arg(\\"$script_value\\", 1)` aspect ( `arg(\\"$script_value\\", 2)` )" }             parmtag { "spare_category" "View" }         }         parm {             name    "aspect"             label   "Pixel Aspect Ratio"             type    float             default { "1" }             range   { 0.05 2 }             parmtag { "spare_category" "View" }         }         parm {             name    "projection"             label   "Projection"             type    ordinal             default { "perspective" }             menu {                 "perspective"   "Perspective"                 "ortho"         "Orthographic"                 "sphere"        "Polar (panoramic)"                 "cylinder"      "Cylindrical (panoramic)"                 "lens"          "Lens Shader"             }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_lensshader"             label   "Lens Shader"             type    oppath             default { "" }             disablewhen "{ projection != lens }"             parmtag { "oprelative" "." }             parmtag { "spare_category" "View" }         }         parm {             name    "focal"             label   "Focal Length"             type    float             joinnext             default { "50" }             range   { 1 100 }         }         parm {             name    "focalunits"             label   "Focal Units"             type    string             default { "mm" }             menu {                 "mm"    "millimeters"                 "m"     "meters"                 "nm"    "nanometers"                 "in"    "inches"                 "ft"    "feet"             }         }         parm {             name    "aperture"             label   "Aperture"             type    float             default { "41.4214" }             range   { 1 100 }             parmtag { "spare_category" "View" }         }         parm {             name    "orthowidth"             label   "Ortho Width"             type    float             default { "2" }             disablewhen "{ projection != ortho }"             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "near"             label   "Near Clipping"             type    float             default { "0.001" }             range   { 0 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "far"             label   "Far Clipping"             type    float             default { "10000" }             range   { 1 10000 }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_bgenable"             label   "Enable Background Image"             type    toggle             default { "1" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "bgenable" }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_background"             label   "Background Image"             type    file             default { "" }             disablewhen "{ vm_bgenable == 0 }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "background" }             parmtag { "spare_category" "View" }         }         parm {             name    "win"             label   "Screen Window X/Y"             type    vector2             size    2             default { "0" "0" }             disablewhen "{ winmask != \\"\\" }"             range   { -1 1 }         }         parm {             name    "winsize"             label   "Screen Window Size"             type    vector2             size    2             default { "1" "1" }             disablewhen "{ winmask != \\"\\" }"             range   { 0.01 10 }         }         parm {             name    "winmask"             label   "Screen Window Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }         parm {             name    "cropl"             label   "Left Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropr"             label   "Right Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropb"             label   "Bottom Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropt"             label   "Top Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropmask"             label   "Crop Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }     }      group {         name    "stdswitcher3_3"         label   "Sampling"          parm {             name    "shutter"             label   "Shutter Time"             type    float             default { "0.5" }             disablewhen "{ allowmotionblur == 0 }"             range   { 0 1 }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "focus"             label   "Focus Distance"             type    float             default { "5" }             disablewhen "{ vm_dof == 0 }"             range   { 0.001 1000 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "focus" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "fstop"             label   "F-Stop"             type    log             default { "5.6" }             disablewhen "{ vm_dof == 0 }"             range   { 1.4 22 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "fstop" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokeh"             label   "Bokeh"             type    string             default { "radial" }             menureplace {                 "radial"    "Radial Bokeh"                 "file"      "Image File Bokeh"                 "box"       "Box Filter Bokeh"                 "null"      "Disable Bokeh"             }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehfile"             label   "Bokeh Image File"             type    image             default { "default.pic" }             disablewhen "{ vm_bokeh != file }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-f" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehrotation"             label   "Bokeh Rotation"             type    float             default { "0" }             disablewhen "{ vm_bokeh != file }"             range   { 0 360 }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-r" }             parmtag { "spare_category" "Sampling" }         }     }      group {         name    "stdswitcher3_4"         label   "Redshift Camera"          group {             name    "RS_camprop_switcher"             label   "Settings"              parm {                 name    "RS_campro_first"                 label   "RS_campro_first"                 type    integer                 invisible                 default { "0" }                 range   { 0 10 }             }             parm {                 name    "RS_campro_label0"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_campro_projection"                 label   "Camera Projection"                 type    ordinal                 default { "0" }                 menu {                     "houdini_camera"    "Houdini Camera Projection"                     "fisheye"           "Fisheye Projection"                     "stereo_spherical"  "Stereo Spherical Projection"                 }             }             parm {                 name    "RS_campro_sep1b"                 label   "RS_campro_sep1b"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_label1"                 label   "Fisheye Camera Settings"                 type    label                 default { "" }             }             parm {                 name    "RS_campro_fisheyeHScale"                 label   "Horizontal Scale"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_projection != fisheye }"                 range   { 0.1 10 }             }             parm {                 name    "RS_campro_fisheyeVScale"                 label   "Vertical Scale"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_projection != fisheye }"                 range   { 0.1 10 }             }             parm {                 name    "RS_campro_sep2"                 label   "RS_campro_sep2"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_label2"                 label   "Cylindrical Camera Settings"                 type    label                 default { "" }             }             parm {                 name    "RS_campro_cylHFOV"                 label   "Horizontal FOV"                 type    float                 default { "360" }                 disablewhen "{ projection != cylinder } { RS_campro_projection != houdini_camera }"                 range   { 0! 360! }             }             parm {                 name    "RS_campro_cylVFOV"                 label   "Vertical FOV"                 type    float                 default { "180" }                 disablewhen "{ projection != cylinder } { RS_campro_projection != houdini_camera }"                 range   { 0! 180! }             }             parm {                 name    "RS_campro_cylOrtho"                 label   "Othographic Cylindrical"                 type    toggle                 default { "0" }                 disablewhen "{ projection != cylinder } { RS_campro_projection != houdini_camera }"             }             parm {                 name    "RS_campro_cylOrthoHeight"                 label   "Othographic Height"                 type    float                 default { "100" }                 disablewhen "{ projection != cylinder } { RS_campro_projection != houdini_camera }"                 range   { 1 500 }             }             parm {                 name    "RS_campro_sep3"                 label   "RS_campro_sep3"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_label3"                 label   "Stereo Cameras Settings"                 type    label                 default { "" }             }             parm {                 name    "RS_campro_stereoMode"                 label   "Render Mode"                 type    ordinal                 default { "0" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube }"                 menu {                     "side_by_side"  "Side by Side"                     "top_botton"    "Top Botton"                     "left_only"     "Left Only"                     "right_only"    "Right Only"                 }             }             parm {                 name    "RS_campro_stereoSeparation"                 label   "Cameras Separation"                 type    float                 default { "0" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube }"                 range   { 0 100 }             }             parm {                 name    "RS_campro_stereoFocus"                 label   "Enable Focus"                 type    toggle                 default { "0" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube }"             }             parm {                 name    "RS_campro_stereoFocusCam"                 label   "Derive Focus Distance From Camera"                 type    toggle                 default { "1" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube } { RS_campro_stereoFocus == 0 }"             }             parm {                 name    "RS_campro_stereoFocusDist"                 label   "Focus Distance"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube } { RS_campro_stereoFocus == 0 } { RS_campro_stereoFocusCam == 1 }"                 range   { 0! 100 }             }             parm {                 name    "RS_campro_stereoHFov"                 label   "Horizontal FOV"                 type    float                 default { "360" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube }"                 range   { 0! 360! }             }             parm {                 name    "RS_campro_stereoVFov"                 label   "Vertical FOV"                 type    float                 default { "180" }                 disablewhen "{ RS_campro_projection != stereo_spherical RS_campro_projection != stereo_cube }"                 range   { 0! 180! }             }             parm {                 name    "RS_campro_sep3b"                 label   "RS_campro_sep3b"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_mbDisable"                 label   "Disable Motion Blur"                 type    toggle                 default { "0" }             }         }          group {             name    "RS_camprop_switcher_1"             label   "DOF"              parm {                 name    "RS_campro_label4"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_campro_dofEnable"                 label   "Enable DOF"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_campro_sep5"                 label   "RS_campro_sep5"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_dofUseHoudiniCamera"                 label   "Use Houdini camera focus/fstop"                 type    toggle                 default { "1" }                 disablewhen "{ RS_campro_dofEnable == 0 }"             }             parm {                 name    "RS_campro_dofDistance"                 label   "Focus Distance"                 type    log                 default { "10" }                 disablewhen "{ RS_campro_dofEnable == 0 } { RS_campro_dofUseHoudiniCamera == 1 }"                 range   { 0 1000 }             }             parm {                 name    "RS_campro_dofCoC"                 label   "CoC Radius"                 type    log                 default { "1" }                 disablewhen "{ RS_campro_dofEnable == 0 } { RS_campro_dofUseHoudiniCamera == 1 }"                 range   { 0 100 }             }             parm {                 name    "RS_campro_dofPower"                 label   "Power"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_dofEnable == 0 }"                 range   { 0 100 }             }             parm {                 name    "RS_campro_dofApect"                 label   "Aspect"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_dofEnable == 0 }"                 range   { 0 4 }             }             parm {                 name    "RS_campro_sep6"                 label   "RS_campro_sep6"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_dofBladesCount"                 label   "Shutter Blades Count"                 type    integer                 default { "0" }                 disablewhen "{ RS_campro_dofEnable == 0 }"                 range   { 0 64 }             }             parm {                 name    "RS_campro_dofBladesAngle"                 label   "Shutter Blades Angle"                 type    float                 default { "0" }                 disablewhen "{ RS_campro_dofEnable == 0 }"                 range   { 0 1 }             }             parm {                 name    "RS_campro_sep7"                 label   "RS_campro_sep7"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_dofBokeh"                 label   "Use Bokeh Image"                 type    toggle                 default { "0" }                 disablewhen "{ RS_campro_dofEnable == 0 }"             }             parm {                 name    "RS_campro_dofBokehNorm"                 label   "Bokeh Image Normalization"                 type    ordinal                 default { "0" }                 disablewhen "{ RS_campro_dofEnable == 0 } { RS_campro_dofBokeh == 0 }"                 menu {                     "1" "None"                     "2" "Unit Intensity"                     "3" "White Color Sum"                 }             }             parm {                 name    "RS_campro_dofBokehImage"                 label   "Bokeh Image"                 type    image                 default { "ImageFile" }                 disablewhen "{ RS_campro_dofEnable == 0 } { RS_campro_dofBokeh == 0 }"             }         }          group {             name    "RS_camprop_switcher_2"             label   "Photographic Exposure"              parm {                 name    "RS_campro_label5"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_campro_PyCamEnable"                 label   "Enable Photographic Exposure"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_campro_sep8"                 label   "RS_campro_sep8"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_label5b"                 label   "Film Settings"                 type    label                 default { "" }             }             parm {                 name    "RS_campro_PyCamISO"                 label   "Film Speed (ISO)"                 type    float                 default { "100" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 3200 }             }             parm {                 name    "RS_campro_PyCamShutter"                 label   "Shutter Time Ratio"                 type    float                 default { "100" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0.01 8000 }             }             parm {                 name    "RS_campro_PyCamfstop"                 label   "f-Stop Number"                 type    float                 default { "8" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 1 64 }             }             parm {                 name    "RS_campro_PyCamWPoint"                 label   "White Point"                 type    color                 size    3                 default { "1" "1" "1" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 1 }             }             parm {                 name    "RS_campro_PyCamVignetting"                 label   "Vignetting"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 25 }             }             parm {                 name    "RS_campro_sep9"                 label   "RS_campro_sep9"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_label5c"                 label   "Tone Mapping"                 type    label                 default { "" }             }             parm {                 name    "RS_campro_PyCamOverExp"                 label   "Allowed Overexposure"                 type    float                 default { "0.2" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0.1 1 }             }             parm {                 name    "RS_campro_PyCamAllowDesat"                 label   "Allow Overexposure Desaturation"                 type    toggle                 default { "0" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"             }             parm {                 name    "RS_campro_PyCamCrushT"                 label   "Black Crush Threshold"                 type    float                 default { "0.25" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 1 }             }             parm {                 name    "RS_campro_PyCamCrushA"                 label   "Black Crush Amount"                 type    float                 default { "0" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 1 }             }             parm {                 name    "RS_campro_PyCamSaturation"                 label   "Saturation"                 type    float                 default { "1" }                 disablewhen "{ RS_campro_PyCamEnable == 0 }"                 range   { 0 2 }             }         }          group {             name    "RS_camprop_switcher_3"             label   "Lens Distortion"              parm {                 name    "RS_campro_label6"                 label   " "                 type    label                 default { "" }             }             parm {                 name    "RS_campro_distortionEnable"                 label   "Enable Lens Distortion"                 type    toggle                 default { "0" }             }             parm {                 name    "RS_campro_sep10"                 label   "RS_campro_sep10"                 type    separator                 default { "" }             }             parm {                 name    "RS_campro_distortionImage"                 label   "Distortion Image"                 type    image                 default { "ImageFile" }                 disablewhen "{ RS_campro_distortionEnable == 0 }"             }             parm {                 name    "RS_campro_last"                 label   "RS_campro_last"                 type    integer                 invisible                 default { "0" }                 range   { 0 10 }             }         }      }  ' $_obj_cam_1080
chblockbegin
chadd -t 0 0 $_obj_cam_1080 sx
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam_1080/sx
chadd -t 0 0 $_obj_cam_1080 sy
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam_1080/sy
chadd -t 0 0 $_obj_cam_1080 sz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam_1080/sz
chadd -t 0 0 $_obj_cam_1080 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_cam_1080/scale
chadd -t 0 0 $_obj_cam_1080 focus
chkey -t 0 -v 5 -m 0 -a 0 -A 0 -T a  -F 'vlength(vtorigin(".", "../FOCUS"))' $_obj_cam_1080/focus
chadd -t 0 0 $_obj_cam_1080 RS_campro_dofDistance
chkey -t 0 -v 10 -m 0 -a 0 -A 0 -T a  -F 'vlength(vtorigin(".", "../FOCUS"))' $_obj_cam_1080/RS_campro_dofDistance
chblockend
opset -S on $_obj_cam_1080
opparm -V 16.5.496 $_obj_cam_1080 t ( 0 0 2 ) s ( sx sy sz ) scale ( scale ) constraints_path ( constraints ) stdswitcher3 ( 4 4 4 4 4 ) focus ( focus ) RS_camprop_switcher ( 1 1 1 1 ) RS_campro_dofEnable ( on ) RS_campro_dofUseHoudiniCamera ( off ) RS_campro_dofDistance ( RS_campro_dofDistance )
chautoscope $_obj_cam_1080 +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.57599997520446777 0.20800000429153442 0.47499999403953552 $_obj_cam_1080
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_cam_1080
opexprlanguage -s hscript $_obj_cam_1080
opuserdata -n '___Version___' -v '16.5.496' $_obj_cam_1080
opuserdata -n '___toolcount___' -v '1' $_obj_cam_1080
opuserdata -n '___toolid___' -v 'Init_RS' $_obj_cam_1080
opcf $_obj_cam_1080

# Node $_obj_cam_1080_camOrigin (Sop/add)
set _obj_cam_1080_camOrigin = `run("opadd -e -n -v add camOrigin")`
oplocate -x `$arg2 + 0.30560000000000009` -y `$arg3 + 3.8942000000000001` $_obj_cam_1080_camOrigin
opparm $_obj_cam_1080_camOrigin  points ( 1 ) prims ( 1 )
opparm -V 16.5.496 $_obj_cam_1080_camOrigin usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam_1080_camOrigin
opexprlanguage -s hscript $_obj_cam_1080_camOrigin
opuserdata -n '___Version___' -v '16.5.496' $_obj_cam_1080_camOrigin
opuserdata -n '___toolcount___' -v '1' $_obj_cam_1080_camOrigin
opuserdata -n '___toolid___' -v 'Init_RS' $_obj_cam_1080_camOrigin

# Node $_obj_cam_1080_file1 (Sop/file)
set _obj_cam_1080_file1 = `run("opadd -e -n -v file file1")`
oplocate -x `$arg2 + -1.5144` -y `$arg3 + 3.8942000000000001` $_obj_cam_1080_file1
chblockbegin
chadd -t 0 0 $_obj_cam_1080_file1 index
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF-1' $_obj_cam_1080_file1/index
chblockend
opparm -V 16.5.496 $_obj_cam_1080_file1 file ( defcam.bgeo )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam_1080_file1
opexprlanguage -s hscript $_obj_cam_1080_file1
opuserdata -n '___Version___' -v '16.5.496' $_obj_cam_1080_file1
opuserdata -n '___toolcount___' -v '1' $_obj_cam_1080_file1
opuserdata -n '___toolid___' -v 'Init_RS' $_obj_cam_1080_file1

# Node $_obj_cam_1080_xform1 (Sop/xform)
set _obj_cam_1080_xform1 = `run("opadd -e -n -v xform xform1")`
oplocate -x `$arg2 + -1.5144` -y `$arg3 + 2.3942000000000001` $_obj_cam_1080_xform1
chblockbegin
chadd -t 0 0 $_obj_cam_1080_xform1 scale
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'property("../iconscale", 1)' $_obj_cam_1080_xform1/scale
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_cam_1080_xform1
opexprlanguage -s hscript $_obj_cam_1080_xform1
opuserdata -n '___Version___' -v '16.5.496' $_obj_cam_1080_xform1
opuserdata -n '___toolcount___' -v '1' $_obj_cam_1080_xform1
opuserdata -n '___toolid___' -v 'Init_RS' $_obj_cam_1080_xform1
oporder -e camOrigin file1 xform1 
opcf ..
opset -p on $_obj_cam_1080
opcf $arg1

# Node $_obj_FOCUS (Object/null)
set _obj_FOCUS = `run("opadd -e -n -v null FOCUS")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.1027000069618225` $_obj_FOCUS
opset -S on $_obj_FOCUS
opparm -V 16.5.496 $_obj_FOCUS keeppos ( on )
chautoscope $_obj_FOCUS +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.57599997520446777 0.20800000429153442 0.47499999403953552 $_obj_FOCUS
opset -d on -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_FOCUS
opexprlanguage -s hscript $_obj_FOCUS
opuserdata -n '___Version___' -v '16.5.496' $_obj_FOCUS
opcf $_obj_FOCUS

# Node $_obj_FOCUS_control1 (Sop/control)
set _obj_FOCUS_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_FOCUS_control1
chblockbegin
chadd -t 0 0 $_obj_FOCUS_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_FOCUS_control1/colorr
chadd -t 0 0 $_obj_FOCUS_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_FOCUS_control1/colorg
chadd -t 0 0 $_obj_FOCUS_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_FOCUS_control1/colorb
chadd -t 0 0 $_obj_FOCUS_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_FOCUS_control1/scale
chadd -t 0 0 $_obj_FOCUS_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_FOCUS_control1/displayicon
chadd -t 0 0 $_obj_FOCUS_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_FOCUS_control1/controltype
chadd -t 0 0 $_obj_FOCUS_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_FOCUS_control1/orientation
chadd -t 0 0 $_obj_FOCUS_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_FOCUS_control1/shadedmode
chblockend
opparm -V 16.5.496 $_obj_FOCUS_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_FOCUS_control1
opexprlanguage -s hscript $_obj_FOCUS_control1
opuserdata -n '___Version___' -v '16.5.496' $_obj_FOCUS_control1

# Node $_obj_FOCUS_point1 (Sop/add)
set _obj_FOCUS_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_FOCUS_point1
opparm $_obj_FOCUS_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.496 $_obj_FOCUS_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_FOCUS_point1
opexprlanguage -s hscript $_obj_FOCUS_point1
opuserdata -n '___Version___' -v '16.5.496' $_obj_FOCUS_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_FOCUS

opcf $arg1
opcf $_obj_cam_1080
opwire -n $_obj_cam_1080_file1 -0 $_obj_cam_1080_xform1
opcf ..
opcf $arg1
opcf $_obj_FOCUS
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_FOCUS
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_cam_1080
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="Scope All" label="Scope All" icon="hicon:/SVGIcons.index?CHANNELS_multi_graph_0.svg">
    <helpText><![CDATA[Scope appends all parameters on the selected nodes and all subchildren of these nodes]]></helpText>
    <script scriptType="python"><![CDATA[import hou

def scopeChildren():
    ns = hou.selectedNodes()
    for n in ns:
        for p in n.allParms():
            if len(p.keyframes()) > 0:
                try:
                    p.setScope(True)
                except:
                    print "problem appending parm to scope"
                    
scopeChildren()]]></script>
  </tool>

  <tool name="aswaab_cam" label="aswaab_cam" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Object/null</contextOpType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if kwargs.has_key("outputnodename") and kwargs.has_key("inputindex"):
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if kwargs.has_key("inputnodename") and kwargs.has_key("outputindex"):
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9 
    if kwargs.has_key("autoplace"):
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if kwargs.has_key("shiftclick") and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if kwargs.has_key("nodepositionx") and             kwargs.has_key("nodepositiony"):
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if kwargs.has_key("node_bbox"):
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'
            
pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if not child_type.has_key('null'):
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r''' 
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_CAM_XFORM (Object/null)
set _obj_CAM_XFORM = `run("opadd -e -n -v null CAM_XFORM")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_CAM_XFORM
chblockbegin
chadd -t 0 6.958333333333333 $_obj_CAM_XFORM tx
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.65277777777777768 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/tx
chkey -t 1.9583333333333333 -v 3.6108235120773315 -m 0 -a 0.65277777777777768 -A 1.6666666666666665 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/tx
chkey -t 6.958333333333333 -v 0.25351583957672119 -m 0 -a 1.6666666666666665 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/tx
chadd -t 0 0 $_obj_CAM_XFORM ty
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/ty
chadd -t 0 3.9583333333333335 $_obj_CAM_XFORM tz
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 1.3194444444444444 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/tz
chkey -t 3.9583333333333335 -v -4.4750438928604126 -m 0 -a 1.3194444444444444 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_CAM_XFORM/tz
chblockend
opset -S on $_obj_CAM_XFORM
opparm -V 16.5.536 $_obj_CAM_XFORM t ( tx ty tz ) r ( 0 0 0 ) s ( 1 1 1 )
chlock $_obj_CAM_XFORM +rx +ry +rz +sx +sy +sz
chautoscope $_obj_CAM_XFORM +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.18799999356269836 0.52899998426437378 0.45899999141693115 $_obj_CAM_XFORM
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_CAM_XFORM
opexprlanguage -s hscript $_obj_CAM_XFORM
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_XFORM
opcf $_obj_CAM_XFORM

# Node $_obj_CAM_XFORM_control1 (Sop/control)
set _obj_CAM_XFORM_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_CAM_XFORM_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_CAM_XFORM_control1
chblockbegin
chadd -t 0 0 $_obj_CAM_XFORM_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_CAM_XFORM_control1/colorr
chadd -t 0 0 $_obj_CAM_XFORM_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_CAM_XFORM_control1/colorg
chadd -t 0 0 $_obj_CAM_XFORM_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_CAM_XFORM_control1/colorb
chadd -t 0 0 $_obj_CAM_XFORM_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_CAM_XFORM_control1/scale
chadd -t 0 0 $_obj_CAM_XFORM_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_CAM_XFORM_control1/displayicon
chadd -t 0 0 $_obj_CAM_XFORM_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_CAM_XFORM_control1/controltype
chadd -t 0 0 $_obj_CAM_XFORM_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_CAM_XFORM_control1/orientation
chadd -t 0 0 $_obj_CAM_XFORM_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_CAM_XFORM_control1/shadedmode
chadd -t 0 0 $_obj_CAM_XFORM_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_CAM_XFORM_control1/sizex
chadd -t 0 0 $_obj_CAM_XFORM_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_CAM_XFORM_control1/sizey
chadd -t 0 0 $_obj_CAM_XFORM_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_CAM_XFORM_control1/sizez
chadd -t 0 0 $_obj_CAM_XFORM_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_CAM_XFORM_control1/tx
chadd -t 0 0 $_obj_CAM_XFORM_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_CAM_XFORM_control1/ty
chadd -t 0 0 $_obj_CAM_XFORM_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_CAM_XFORM_control1/tz
chadd -t 0 0 $_obj_CAM_XFORM_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_CAM_XFORM_control1/rx
chadd -t 0 0 $_obj_CAM_XFORM_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_CAM_XFORM_control1/ry
chadd -t 0 0 $_obj_CAM_XFORM_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_CAM_XFORM_control1/rz
chblockend
opparm -V 16.5.536 $_obj_CAM_XFORM_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_CAM_XFORM_control1
opexprlanguage -s hscript $_obj_CAM_XFORM_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_XFORM_control1

# Node $_obj_CAM_XFORM_point1 (Sop/add)
set _obj_CAM_XFORM_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_CAM_XFORM_point1
opparm $_obj_CAM_XFORM_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_CAM_XFORM_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_CAM_XFORM_point1
opexprlanguage -s hscript $_obj_CAM_XFORM_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_XFORM_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_CAM_XFORM
opcf $arg1

# Node $_obj_Cam_Roll (Object/null)
set _obj_Cam_Roll = `run("opadd -e -n -v null Cam_Roll")`
oplocate -x `$arg2 + 0` -y `$arg3 + -3.5862000000000003` $_obj_Cam_Roll
chblockbegin
chadd -t 0 6.958333333333333 $_obj_Cam_Roll rz
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.65277777777777768 -T a  -o mM  -F 'bezier()' $_obj_Cam_Roll/rz
chkey -t 1.9583333333333333 -v 0 -m 0 -a 0.65277777777777768 -A 1.6666666666666665 -T a  -o mM  -F 'bezier()' $_obj_Cam_Roll/rz
chkey -t 6.958333333333333 -v -42.577548358466565 -m 0 -a 1.6666666666666665 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_Roll/rz
chblockend
opset -S on $_obj_Cam_Roll
opparm -V 16.5.536 $_obj_Cam_Roll t ( 0 0 0 ) r ( 0 0 rz ) s ( 1 1 1 )
chlock $_obj_Cam_Roll +tx +ty +tz +rx +ry +sx +sy +sz
chautoscope $_obj_Cam_Roll +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_Roll
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_Roll
opexprlanguage -s hscript $_obj_Cam_Roll
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Roll
opcf $_obj_Cam_Roll

# Node $_obj_Cam_Roll_control1 (Sop/control)
set _obj_Cam_Roll_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_Roll_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_Roll_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_Roll_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_Roll_control1/colorr
chadd -t 0 0 $_obj_Cam_Roll_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_Roll_control1/colorg
chadd -t 0 0 $_obj_Cam_Roll_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_Roll_control1/colorb
chadd -t 0 0 $_obj_Cam_Roll_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_Roll_control1/scale
chadd -t 0 0 $_obj_Cam_Roll_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_Roll_control1/displayicon
chadd -t 0 0 $_obj_Cam_Roll_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_Roll_control1/controltype
chadd -t 0 0 $_obj_Cam_Roll_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_Roll_control1/orientation
chadd -t 0 0 $_obj_Cam_Roll_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_Roll_control1/shadedmode
chadd -t 0 0 $_obj_Cam_Roll_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_Roll_control1/sizex
chadd -t 0 0 $_obj_Cam_Roll_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_Roll_control1/sizey
chadd -t 0 0 $_obj_Cam_Roll_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_Roll_control1/sizez
chadd -t 0 0 $_obj_Cam_Roll_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_Roll_control1/tx
chadd -t 0 0 $_obj_Cam_Roll_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_Roll_control1/ty
chadd -t 0 0 $_obj_Cam_Roll_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_Roll_control1/tz
chadd -t 0 0 $_obj_Cam_Roll_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_Roll_control1/rx
chadd -t 0 0 $_obj_Cam_Roll_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_Roll_control1/ry
chadd -t 0 0 $_obj_Cam_Roll_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_Roll_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_Roll_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Roll_control1
opexprlanguage -s hscript $_obj_Cam_Roll_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Roll_control1

# Node $_obj_Cam_Roll_point1 (Sop/add)
set _obj_Cam_Roll_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_Roll_point1
opparm $_obj_Cam_Roll_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_Roll_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Roll_point1
opexprlanguage -s hscript $_obj_Cam_Roll_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Roll_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_Roll
opcf $arg1

# Node $_obj_Cam_Lookat (Object/null)
set _obj_Cam_Lookat = `run("opadd -e -n -v null Cam_Lookat")`
oplocate -x `$arg2 + 0` -y `$arg3 + -6.1137600000000001` $_obj_Cam_Lookat
opset -S on $_obj_Cam_Lookat
opparm -V 16.5.536 $_obj_Cam_Lookat constraints_on ( on ) constraints_path ( constraints )
chautoscope $_obj_Cam_Lookat +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_Lookat
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_Lookat
opexprlanguage -s hscript $_obj_Cam_Lookat
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Lookat
opcf $_obj_Cam_Lookat

# Node $_obj_Cam_Lookat_control1 (Sop/control)
set _obj_Cam_Lookat_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + -1.1943999999999999` -y `$arg3 + 1.8942000000000001` $_obj_Cam_Lookat_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_Lookat_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_Lookat_control1/colorr
chadd -t 0 0 $_obj_Cam_Lookat_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_Lookat_control1/colorg
chadd -t 0 0 $_obj_Cam_Lookat_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_Lookat_control1/colorb
chadd -t 0 0 $_obj_Cam_Lookat_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_Lookat_control1/scale
chadd -t 0 0 $_obj_Cam_Lookat_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_Lookat_control1/displayicon
chadd -t 0 0 $_obj_Cam_Lookat_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_Lookat_control1/controltype
chadd -t 0 0 $_obj_Cam_Lookat_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_Lookat_control1/orientation
chadd -t 0 0 $_obj_Cam_Lookat_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_Lookat_control1/shadedmode
chadd -t 0 0 $_obj_Cam_Lookat_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_Lookat_control1/sizex
chadd -t 0 0 $_obj_Cam_Lookat_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_Lookat_control1/sizey
chadd -t 0 0 $_obj_Cam_Lookat_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_Lookat_control1/sizez
chadd -t 0 0 $_obj_Cam_Lookat_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_Lookat_control1/tx
chadd -t 0 0 $_obj_Cam_Lookat_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_Lookat_control1/ty
chadd -t 0 0 $_obj_Cam_Lookat_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_Lookat_control1/tz
chadd -t 0 0 $_obj_Cam_Lookat_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_Lookat_control1/rx
chadd -t 0 0 $_obj_Cam_Lookat_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_Lookat_control1/ry
chadd -t 0 0 $_obj_Cam_Lookat_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_Lookat_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_Lookat_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Lookat_control1
opexprlanguage -s hscript $_obj_Cam_Lookat_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Lookat_control1

# Node $_obj_Cam_Lookat_point1 (Sop/add)
set _obj_Cam_Lookat_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 0.80559999999999998` -y `$arg3 + 1.8942000000000001` $_obj_Cam_Lookat_point1
opparm $_obj_Cam_Lookat_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_Lookat_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Lookat_point1
opexprlanguage -s hscript $_obj_Cam_Lookat_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Lookat_point1

# Node $_obj_Cam_Lookat_constraints (Sop/chopnet)
set _obj_Cam_Lookat_constraints = `run("opadd -e -n -v chopnet constraints")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_Lookat_constraints
opspareds '    parm {         name    "chopnet_rate"         label   "CHOP Rate"         type    integer         default { "24" }         range   { 1! 100 }     }     parm {         name    "motionsamples"         label   "CHOP Motion Samples"         type    integer         default { "1" }         range   { 1! 20 }     } ' $_obj_Cam_Lookat_constraints
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_constraints chopnet_rate
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F '$FPS*ch("motionsamples")' $_obj_Cam_Lookat_constraints/chopnet_rate
chadd -t 0 0 $_obj_Cam_Lookat_constraints motionsamples
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F '$CHOPMOTIONSAMPLES' $_obj_Cam_Lookat_constraints/motionsamples
chblockend
opparm -V 16.5.536 $_obj_Cam_Lookat_constraints chopnet_rate ( chopnet_rate ) motionsamples ( motionsamples )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Lookat_constraints
opexprlanguage -s hscript $_obj_Cam_Lookat_constraints
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Lookat_constraints
opuserdata -n '___toolcount___' -v '7' $_obj_Cam_Lookat_constraints
opuserdata -n '___toolid___' -v 'object_constraintlookat' $_obj_Cam_Lookat_constraints
opcf $_obj_Cam_Lookat_constraints

# Node $_obj_Cam_Lookat_constraints_getworldspace (Chop/constraintgetworldspace)
set _obj_Cam_Lookat_constraints_getworldspace = `run("opadd -e -n -v constraintgetworldspace getworldspace")`
oplocate -x `$arg2 + -3.3887999999999998` -y `$arg3 + 1.7884` $_obj_Cam_Lookat_constraints_getworldspace
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_constraints_getworldspace vex_rate
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("../chopnet_rate")' $_obj_Cam_Lookat_constraints_getworldspace/vex_rate
chblockend
opparm $_obj_Cam_Lookat_constraints_getworldspace vex_name ( 'tx ty tz rx ry rz sx sy sz' ) vex_range ( frame ) vex_rate ( vex_rate ) gcolor ( 0.89999997615814209 0 0 ) obj_path ( ../.. )
opset -d off -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a off -o off $_obj_Cam_Lookat_constraints_getworldspace
opexprlanguage -s hscript $_obj_Cam_Lookat_constraints_getworldspace
opuserdata -n '___Version___' -v '' $_obj_Cam_Lookat_constraints_getworldspace
opuserdata -n '___toolcount___' -v '7' $_obj_Cam_Lookat_constraints_getworldspace
opuserdata -n '___toolid___' -v 'object_constraintlookat' $_obj_Cam_Lookat_constraints_getworldspace

# Node $_obj_Cam_Lookat_constraints_Cam_lookat (Chop/constraintobject)
set _obj_Cam_Lookat_constraints_Cam_lookat = `run("opadd -e -n -v constraintobject Cam_lookat")`
oplocate -x `$arg2 + -1.6943999999999999` -y `$arg3 + 0.89419999999999999` $_obj_Cam_Lookat_constraints_Cam_lookat
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_constraints_Cam_lookat vex_rate
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("../chopnet_rate")' $_obj_Cam_Lookat_constraints_Cam_lookat/vex_rate
chblockend
opparm $_obj_Cam_Lookat_constraints_Cam_lookat vex_name ( 'tx ty tz rx ry rz sx sy sz' ) vex_range ( frame ) vex_rate ( vex_rate ) gcolor ( 0.89999997615814209 0.89999997615814209 0 ) obj_path ( ../../../Cam_lookat )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a off -o off $_obj_Cam_Lookat_constraints_Cam_lookat
opexprlanguage -s hscript $_obj_Cam_Lookat_constraints_Cam_lookat
opuserdata -n '___Version___' -v '' $_obj_Cam_Lookat_constraints_Cam_lookat
opuserdata -n '___toolcount___' -v '7' $_obj_Cam_Lookat_constraints_Cam_lookat
opuserdata -n '___toolid___' -v 'object_constraintlookat' $_obj_Cam_Lookat_constraints_Cam_lookat

# Node $_obj_Cam_Lookat_constraints_Cam_up (Chop/constraintobject)
set _obj_Cam_Lookat_constraints_Cam_up = `run("opadd -e -n -v constraintobject Cam_up")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_Cam_Lookat_constraints_Cam_up
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_constraints_Cam_up vex_rate
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("../chopnet_rate")' $_obj_Cam_Lookat_constraints_Cam_up/vex_rate
chblockend
opparm $_obj_Cam_Lookat_constraints_Cam_up vex_name ( 'tx ty tz rx ry rz sx sy sz' ) vex_range ( frame ) vex_rate ( vex_rate ) gcolor ( 0.89999997615814209 0.89999997615814209 0 ) obj_path ( ../../../Cam_up )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a off -o off $_obj_Cam_Lookat_constraints_Cam_up
opexprlanguage -s hscript $_obj_Cam_Lookat_constraints_Cam_up
opuserdata -n '___Version___' -v '' $_obj_Cam_Lookat_constraints_Cam_up
opuserdata -n '___toolcount___' -v '7' $_obj_Cam_Lookat_constraints_Cam_up
opuserdata -n '___toolid___' -v 'object_constraintlookat' $_obj_Cam_Lookat_constraints_Cam_up

# Node $_obj_Cam_Lookat_constraints_lookat (Chop/constraintlookat)
set _obj_Cam_Lookat_constraints_lookat = `run("opadd -e -n -v constraintlookat lookat")`
oplocate -x `$arg2 + -3.3887999999999998` -y `$arg3 + 0.89419999999999999` $_obj_Cam_Lookat_constraints_lookat
chblockbegin
chadd -t 0 0 $_obj_Cam_Lookat_constraints_lookat vex_rate
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F 'ch("../chopnet_rate")' $_obj_Cam_Lookat_constraints_lookat/vex_rate
chblockend
opparm $_obj_Cam_Lookat_constraints_lookat vex_name ( 'tx ty tz rx ry rz sx sy sz' ) vex_range ( frame ) vex_rate ( vex_rate ) gcolor ( 0 0 0.89999997615814209 ) lookat ( 0 0 1 ) uppos ( 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a on -o off $_obj_Cam_Lookat_constraints_lookat
opexprlanguage -s hscript $_obj_Cam_Lookat_constraints_lookat
opuserdata -n '___Version___' -v '' $_obj_Cam_Lookat_constraints_lookat
opuserdata -n '___toolcount___' -v '7' $_obj_Cam_Lookat_constraints_lookat
opuserdata -n '___toolid___' -v 'object_constraintlookat' $_obj_Cam_Lookat_constraints_lookat
oporder -e getworldspace Cam_lookat Cam_up lookat 
opcf ..
oporder -e control1 point1 constraints 
opcf ..
opset -p on $_obj_Cam_Lookat
opcf $arg1

# Node $_obj_Cam_Auto (Object/null)
set _obj_Cam_Auto = `run("opadd -e -n -v null Cam_Auto")`
oplocate -x `$arg2 + 0` -y `$arg3 + -8.5045599999999997` $_obj_Cam_Auto
opset -S on $_obj_Cam_Auto
objpretransform $_obj_Cam_Auto 1 0 -3.4694469519536142e-18 0 0 1 0 0 6.9388939039072284e-18 -1.3877787807814457e-17 0.99999999999999989 0 0 0 0 1
opparm -V 16.5.536 $_obj_Cam_Auto s ( 1 1 1 ) keeppos ( on )
chlock $_obj_Cam_Auto +sx +sy +sz
chautoscope $_obj_Cam_Auto +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_Auto
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_Auto
opexprlanguage -s hscript $_obj_Cam_Auto
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Auto
opcf $_obj_Cam_Auto

# Node $_obj_Cam_Auto_control1 (Sop/control)
set _obj_Cam_Auto_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_Auto_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_Auto_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_Auto_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_Auto_control1/colorr
chadd -t 0 0 $_obj_Cam_Auto_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_Auto_control1/colorg
chadd -t 0 0 $_obj_Cam_Auto_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_Auto_control1/colorb
chadd -t 0 0 $_obj_Cam_Auto_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_Auto_control1/scale
chadd -t 0 0 $_obj_Cam_Auto_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_Auto_control1/displayicon
chadd -t 0 0 $_obj_Cam_Auto_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_Auto_control1/controltype
chadd -t 0 0 $_obj_Cam_Auto_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_Auto_control1/orientation
chadd -t 0 0 $_obj_Cam_Auto_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_Auto_control1/shadedmode
chadd -t 0 0 $_obj_Cam_Auto_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_Auto_control1/sizex
chadd -t 0 0 $_obj_Cam_Auto_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_Auto_control1/sizey
chadd -t 0 0 $_obj_Cam_Auto_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_Auto_control1/sizez
chadd -t 0 0 $_obj_Cam_Auto_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_Auto_control1/tx
chadd -t 0 0 $_obj_Cam_Auto_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_Auto_control1/ty
chadd -t 0 0 $_obj_Cam_Auto_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_Auto_control1/tz
chadd -t 0 0 $_obj_Cam_Auto_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_Auto_control1/rx
chadd -t 0 0 $_obj_Cam_Auto_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_Auto_control1/ry
chadd -t 0 0 $_obj_Cam_Auto_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_Auto_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_Auto_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Auto_control1
opexprlanguage -s hscript $_obj_Cam_Auto_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Auto_control1

# Node $_obj_Cam_Auto_point1 (Sop/add)
set _obj_Cam_Auto_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_Auto_point1
opparm $_obj_Cam_Auto_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_Auto_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Auto_point1
opexprlanguage -s hscript $_obj_Cam_Auto_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Auto_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_Auto
opcf $arg1

# Node $_obj_Rotate_Horiz (Object/null)
set _obj_Rotate_Horiz = `run("opadd -e -n -v null Rotate_Horiz")`
oplocate -x `$arg2 + 0` -y `$arg3 + -1.1954` $_obj_Rotate_Horiz
chblockbegin
chadd -t 0 6.958333333333333 $_obj_Rotate_Horiz ry
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.65277777777777768 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Horiz/ry
chkey -t 1.9583333333333333 -v 60.210522782590232 -m 38.595691288402179 -a 25.202864786929769 -A 25.739095952609127 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Horiz/ry
chkey -t 3.958333333333333 -v 139.57488139765448 -m 35.049596711507817 -a 23.375906205980925 -A 35.063859308971388 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Horiz/ry
chkey -t 6.958333333333333 -v 217.94832173324809 -m 0 -a 1 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Horiz/ry
chblockend
opset -S on $_obj_Rotate_Horiz
opparm -V 16.5.536 $_obj_Rotate_Horiz t ( 0 0 0 ) r ( 0 ry 0 ) s ( 1 1 1 )
chlock $_obj_Rotate_Horiz +tx +ty +tz +rx +rz +sx +sy +sz
chautoscope $_obj_Rotate_Horiz +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Rotate_Horiz
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Rotate_Horiz
opexprlanguage -s hscript $_obj_Rotate_Horiz
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Horiz
opcf $_obj_Rotate_Horiz

# Node $_obj_Rotate_Horiz_control1 (Sop/control)
set _obj_Rotate_Horiz_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Rotate_Horiz_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Rotate_Horiz_control1
chblockbegin
chadd -t 0 0 $_obj_Rotate_Horiz_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Rotate_Horiz_control1/colorr
chadd -t 0 0 $_obj_Rotate_Horiz_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Rotate_Horiz_control1/colorg
chadd -t 0 0 $_obj_Rotate_Horiz_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Rotate_Horiz_control1/colorb
chadd -t 0 0 $_obj_Rotate_Horiz_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Rotate_Horiz_control1/scale
chadd -t 0 0 $_obj_Rotate_Horiz_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Rotate_Horiz_control1/displayicon
chadd -t 0 0 $_obj_Rotate_Horiz_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Rotate_Horiz_control1/controltype
chadd -t 0 0 $_obj_Rotate_Horiz_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Rotate_Horiz_control1/orientation
chadd -t 0 0 $_obj_Rotate_Horiz_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Rotate_Horiz_control1/shadedmode
chadd -t 0 0 $_obj_Rotate_Horiz_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Rotate_Horiz_control1/sizex
chadd -t 0 0 $_obj_Rotate_Horiz_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Rotate_Horiz_control1/sizey
chadd -t 0 0 $_obj_Rotate_Horiz_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Rotate_Horiz_control1/sizez
chadd -t 0 0 $_obj_Rotate_Horiz_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Rotate_Horiz_control1/tx
chadd -t 0 0 $_obj_Rotate_Horiz_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Rotate_Horiz_control1/ty
chadd -t 0 0 $_obj_Rotate_Horiz_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Rotate_Horiz_control1/tz
chadd -t 0 0 $_obj_Rotate_Horiz_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Rotate_Horiz_control1/rx
chadd -t 0 0 $_obj_Rotate_Horiz_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Rotate_Horiz_control1/ry
chadd -t 0 0 $_obj_Rotate_Horiz_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Rotate_Horiz_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Rotate_Horiz_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Rotate_Horiz_control1
opexprlanguage -s hscript $_obj_Rotate_Horiz_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Horiz_control1

# Node $_obj_Rotate_Horiz_point1 (Sop/add)
set _obj_Rotate_Horiz_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Rotate_Horiz_point1
opparm $_obj_Rotate_Horiz_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Rotate_Horiz_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Rotate_Horiz_point1
opexprlanguage -s hscript $_obj_Rotate_Horiz_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Horiz_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Rotate_Horiz
opcf $arg1

# Node $_obj_CAM_RIGGED (Object/cam)
set _obj_CAM_RIGGED = `run("opadd -e -n -v cam CAM_RIGGED")`
oplocate -x `$arg2 + 0` -y `$arg3 + -9.6879600000000003` $_obj_CAM_RIGGED
opspareds '    group {         name    "stdswitcher3"         label   "Transform"          parm {             name    "xOrd"             baseparm             label   "Transform Order"             joinnext             export  none         }         parm {             name    "rOrd"             baseparm             label   "Rotate Order"             nolabel             export  none         }         parm {             name    "t"             baseparm             label   "Translate"             export  all         }         parm {             name    "r"             baseparm             label   "Rotate"             export  all         }         parm {             name    "s"             baseparm             label   "Scale"             invisible             export  none         }         parm {             name    "p"             baseparm             label   "Pivot Translate"             export  none         }         parm {             name    "pr"             baseparm             label   "Pivot Rotate"             export  none         }         parm {             name    "scale"             baseparm             label   "Uniform Scale"             invisible             export  none         }         parm {             name    "pre_xform"             baseparm             label   "Modify Pre-Transform"             export  none         }         parm {             name    "keeppos"             baseparm             label   "Keep Position When Parenting"             export  none         }         parm {             name    "childcomp"             baseparm             label   "Child Compensation"             export  none         }         parm {             name    "constraints_on"             baseparm             label   "Enable Constraints"             export  none         }         parm {             name    "constraints_path"             baseparm             label   "Constraints"             export  none         }         parm {             name    "lookatpath"             baseparm             label   "Look At"             invisible             export  none         }         parm {             name    "lookupobjpath"             baseparm             label   "Look Up Object"             invisible             export  none         }         parm {             name    "lookup"             baseparm             label   "Look At Up Vector"             invisible             export  none         }         parm {             name    "pathobjpath"             baseparm             label   "Path Object"             invisible             export  none         }         parm {             name    "roll"             baseparm             label   "Roll"             invisible             export  none         }         parm {             name    "pos"             baseparm             label   "Position"             invisible             export  none         }         parm {             name    "uparmtype"             baseparm             label   "Parameterization"             invisible             export  none         }         parm {             name    "pathorient"             baseparm             label   "Orient Along Path"             invisible             export  none         }         parm {             name    "up"             baseparm             label   "Orient Up Vector"             invisible             export  none         }         parm {             name    "bank"             baseparm             label   "Auto-Bank factor"             invisible             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Render"          parm {             name    "tdisplay"             baseparm             label   "Display"             joinnext             export  none         }         parm {             name    "display"             baseparm             label   "Display"             export  none         }         parm {             name    "use_dcolor"             baseparm             label   "Set Wireframe Color"             export  none         }         parm {             name    "dcolor"             baseparm             label   "Wireframe Color"             export  none         }         parm {             name    "picking"             baseparm             label   "Viewport Selecting Enabled"             export  none         }         parm {             name    "pickscript"             baseparm             label   "Select Script"             export  none         }         parm {             name    "caching"             baseparm             label   "Cache Object Transform"             export  none         }     }      group {         name    "stdswitcher3_2"         label   "View"          parm {             name    "iconscale"             label   "Icon Scale"             type    float             default { "1" }             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "res"             label   "Resolution"             type    intvector2             joinnext             size    2             default { "1280" "720" }             range   { -1 1 }             parmtag { "cook_dependent" "1" }             parmtag { "spare_category" "View" }         }         parm {             name    "resMenu"             label   "Choose Resolution"             type    button             nolabel             default { "0" }             menumini {                 [ "echo `pythonexprs(\\"__import__(\'toolutils\').parseDialogScriptMenu(\'FBres\')\\")`" ]             }             parmtag { "script_callback" "opparm . res ( `arg(\\"$script_value\\", 0)` `arg(\\"$script_value\\", 1)` aspect ( `arg(\\"$script_value\\", 2)` )" }             parmtag { "spare_category" "View" }         }         parm {             name    "aspect"             label   "Pixel Aspect Ratio"             type    float             default { "1" }             range   { 0.05 2 }             parmtag { "spare_category" "View" }         }         parm {             name    "projection"             label   "Projection"             type    ordinal             default { "perspective" }             menu {                 "perspective"   "Perspective"                 "ortho"         "Orthographic"                 "sphere"        "Polar (panoramic)"                 "cylinder"      "Cylindrical (panoramic)"                 "lens"          "Lens Shader"             }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_lensshader"             label   "Lens Shader"             type    oppath             default { "" }             disablewhen "{ projection != lens }"             parmtag { "oprelative" "." }             parmtag { "spare_category" "View" }         }         parm {             name    "focal"             label   "Focal Length"             type    float             joinnext             default { "50" }             range   { 1 100 }         }         parm {             name    "focalunits"             label   "Focal Units"             type    string             default { "mm" }             menu {                 "mm"    "millimeters"                 "m"     "meters"                 "nm"    "nanometers"                 "in"    "inches"                 "ft"    "feet"             }         }         parm {             name    "aperture"             label   "Aperture"             type    float             default { "41.4214" }             range   { 1 100 }             parmtag { "spare_category" "View" }         }         parm {             name    "orthowidth"             label   "Ortho Width"             type    float             default { "2" }             disablewhen "{ projection != ortho }"             range   { 0.001 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "near"             label   "Near Clipping"             type    float             default { "0.001" }             range   { 0 10 }             parmtag { "spare_category" "View" }         }         parm {             name    "far"             label   "Far Clipping"             type    float             default { "10000" }             range   { 1 10000 }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_bgenable"             label   "Enable Background Image"             type    toggle             default { "1" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "bgenable" }             parmtag { "spare_category" "View" }         }         parm {             name    "vm_background"             label   "Background Image"             type    file             default { "" }             disablewhen "{ vm_bgenable == 0 }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "image" }             parmtag { "mantra_name" "background" }             parmtag { "spare_category" "View" }         }         parm {             name    "win"             label   "Screen Window X/Y"             type    vector2             size    2             default { "0" "0" }             disablewhen "{ winmask != \\"\\" }"             range   { -1 1 }         }         parm {             name    "winsize"             label   "Screen Window Size"             type    vector2             size    2             default { "1" "1" }             disablewhen "{ winmask != \\"\\" }"             range   { 0.01 10 }         }         parm {             name    "winmask"             label   "Screen Window Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }         parm {             name    "cropl"             label   "Left Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropr"             label   "Right Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropb"             label   "Bottom Crop"             type    float             default { "0" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropt"             label   "Top Crop"             type    float             default { "1" }             disablewhen "{ cropmask != \\"\\" }"             range   { 0 1 }         }         parm {             name    "cropmask"             label   "Crop Mask"             type    oplist             default { "" }             disablewhen "{ projection != ortho projection != perspective }"             parmtag { "opexpand" "1" }             parmtag { "opfilter" "!!OBJ/GEOMETRY!!" }             parmtag { "oprelative" "/obj" }         }     }      group {         name    "stdswitcher3_3"         label   "Sampling"          parm {             name    "shutter"             label   "Shutter Time"             type    float             default { "0.5" }             disablewhen "{ allowmotionblur == 0 }"             range   { 0 1 }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "focus"             label   "Focus Distance"             type    float             default { "5" }             disablewhen "{ vm_dof == 0 }"             range   { 0.001 1000 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "focus" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "fstop"             label   "F-Stop"             type    log             default { "5.6" }             disablewhen "{ vm_dof == 0 }"             range   { 1.4 22 }             parmtag { "mantra_class" "camera" }             parmtag { "mantra_name" "fstop" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokeh"             label   "Bokeh"             type    string             default { "radial" }             menureplace {                 "radial"    "Radial Bokeh"                 "file"      "Image File Bokeh"                 "box"       "Box Filter Bokeh"                 "null"      "Disable Bokeh"             }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehfile"             label   "Bokeh Image File"             type    image             default { "default.pic" }             disablewhen "{ vm_bokeh != file }"             parmtag { "filechooser_mode" "read" }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-f" }             parmtag { "spare_category" "Sampling" }         }         parm {             name    "vm_bokehrotation"             label   "Bokeh Rotation"             type    float             default { "0" }             disablewhen "{ vm_bokeh != file }"             range   { 0 360 }             parmtag { "mantra_class" "bokeh" }             parmtag { "mantra_name" "-r" }             parmtag { "spare_category" "Sampling" }         }     }  ' $_obj_CAM_RIGGED
chblockbegin
chadd -t 0 0 $_obj_CAM_RIGGED sx
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_CAM_RIGGED/sx
chadd -t 0 0 $_obj_CAM_RIGGED sy
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_CAM_RIGGED/sy
chadd -t 0 0 $_obj_CAM_RIGGED sz
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_CAM_RIGGED/sz
chadd -t 0 0 $_obj_CAM_RIGGED scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'lock(1)' $_obj_CAM_RIGGED/scale
chblockend
opset -S on $_obj_CAM_RIGGED
objpretransform $_obj_CAM_RIGGED 0.99999999999999989 -4.076437905113639e-09 0 0 4.0764379055473199e-09 1 0 0 3.4694469519536142e-18 0 1 0 0 0 0 1
opparm -V 16.5.536 $_obj_CAM_RIGGED t ( 0 0 0 ) r ( 0 0 0 ) s ( sx sy sz ) scale ( scale ) keeppos ( on ) constraints_on ( on ) constraints_path ( constraints )
chlock $_obj_CAM_RIGGED +tx +ty +tz +rx +ry +rz
chautoscope $_obj_CAM_RIGGED +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.61599999666213989 0.87099999189376831 0.76899999380111694 $_obj_CAM_RIGGED
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_CAM_RIGGED
opexprlanguage -s hscript $_obj_CAM_RIGGED
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_RIGGED
opuserdata -n '___toolcount___' -v '2' $_obj_CAM_RIGGED
opuserdata -n '___toolid___' -v 'object_cam' $_obj_CAM_RIGGED
opcf $_obj_CAM_RIGGED

# Node $_obj_CAM_RIGGED_camOrigin (Sop/add)
set _obj_CAM_RIGGED_camOrigin = `run("opadd -e -n -v add camOrigin")`
oplocate -x `$arg2 + -1.3888` -y `$arg3 + 4.7884000000000002` $_obj_CAM_RIGGED_camOrigin
opparm $_obj_CAM_RIGGED_camOrigin  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_CAM_RIGGED_camOrigin usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_CAM_RIGGED_camOrigin
opexprlanguage -s hscript $_obj_CAM_RIGGED_camOrigin
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_RIGGED_camOrigin
opuserdata -n '___toolcount___' -v '2' $_obj_CAM_RIGGED_camOrigin
opuserdata -n '___toolid___' -v 'object_cam' $_obj_CAM_RIGGED_camOrigin

# Node $_obj_CAM_RIGGED_file1 (Sop/file)
set _obj_CAM_RIGGED_file1 = `run("opadd -e -n -v file file1")`
oplocate -x `$arg2 + -3.2088000000000001` -y `$arg3 + 4.7884000000000002` $_obj_CAM_RIGGED_file1
chblockbegin
chadd -t 0 0 $_obj_CAM_RIGGED_file1 index
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF-1' $_obj_CAM_RIGGED_file1/index
chblockend
opparm -V 16.5.536 $_obj_CAM_RIGGED_file1 file ( defcam.bgeo )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_CAM_RIGGED_file1
opexprlanguage -s hscript $_obj_CAM_RIGGED_file1
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_RIGGED_file1
opuserdata -n '___toolcount___' -v '2' $_obj_CAM_RIGGED_file1
opuserdata -n '___toolid___' -v 'object_cam' $_obj_CAM_RIGGED_file1

# Node $_obj_CAM_RIGGED_xform1 (Sop/xform)
set _obj_CAM_RIGGED_xform1 = `run("opadd -e -n -v xform xform1")`
oplocate -x `$arg2 + -3.2088000000000001` -y `$arg3 + 3.2884000000000002` $_obj_CAM_RIGGED_xform1
chblockbegin
chadd -t 0 0 $_obj_CAM_RIGGED_xform1 scale
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'property("../iconscale", 1)' $_obj_CAM_RIGGED_xform1/scale
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_CAM_RIGGED_xform1
opexprlanguage -s hscript $_obj_CAM_RIGGED_xform1
opuserdata -n '___Version___' -v '16.5.536' $_obj_CAM_RIGGED_xform1
opuserdata -n '___toolcount___' -v '2' $_obj_CAM_RIGGED_xform1
opuserdata -n '___toolid___' -v 'object_cam' $_obj_CAM_RIGGED_xform1
oporder -e camOrigin file1 xform1 
opcf ..
opset -p on $_obj_CAM_RIGGED
opcf $arg1

# Node $_obj_Cam_Offset (Object/null)
set _obj_Cam_Offset = `run("opadd -e -n -v null Cam_Offset")`
oplocate -x `$arg2 + 0` -y `$arg3 + -7.3091599999999994` $_obj_Cam_Offset
opset -S on $_obj_Cam_Offset
opparm -V 16.5.536 $_obj_Cam_Offset s ( 1 1 1 ) p ( 0 0 0 ) pr ( 0 0 0 )
chlock $_obj_Cam_Offset +sx +sy +sz +px +py +pz +prx +pry +prz
chautoscope $_obj_Cam_Offset +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_Offset
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_Offset
opexprlanguage -s hscript $_obj_Cam_Offset
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Offset
opcf $_obj_Cam_Offset

# Node $_obj_Cam_Offset_control1 (Sop/control)
set _obj_Cam_Offset_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_Offset_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_Offset_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_Offset_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_Offset_control1/colorr
chadd -t 0 0 $_obj_Cam_Offset_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_Offset_control1/colorg
chadd -t 0 0 $_obj_Cam_Offset_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_Offset_control1/colorb
chadd -t 0 0 $_obj_Cam_Offset_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_Offset_control1/scale
chadd -t 0 0 $_obj_Cam_Offset_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_Offset_control1/displayicon
chadd -t 0 0 $_obj_Cam_Offset_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_Offset_control1/controltype
chadd -t 0 0 $_obj_Cam_Offset_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_Offset_control1/orientation
chadd -t 0 0 $_obj_Cam_Offset_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_Offset_control1/shadedmode
chadd -t 0 0 $_obj_Cam_Offset_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_Offset_control1/sizex
chadd -t 0 0 $_obj_Cam_Offset_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_Offset_control1/sizey
chadd -t 0 0 $_obj_Cam_Offset_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_Offset_control1/sizez
chadd -t 0 0 $_obj_Cam_Offset_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_Offset_control1/tx
chadd -t 0 0 $_obj_Cam_Offset_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_Offset_control1/ty
chadd -t 0 0 $_obj_Cam_Offset_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_Offset_control1/tz
chadd -t 0 0 $_obj_Cam_Offset_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_Offset_control1/rx
chadd -t 0 0 $_obj_Cam_Offset_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_Offset_control1/ry
chadd -t 0 0 $_obj_Cam_Offset_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_Offset_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_Offset_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Offset_control1
opexprlanguage -s hscript $_obj_Cam_Offset_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Offset_control1

# Node $_obj_Cam_Offset_point1 (Sop/add)
set _obj_Cam_Offset_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_Offset_point1
opparm $_obj_Cam_Offset_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_Offset_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Offset_point1
opexprlanguage -s hscript $_obj_Cam_Offset_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Offset_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_Offset
opcf $arg1

# Node $_obj_motionfx (Object/chopnet)
set _obj_motionfx = `run("opadd -e -n -v chopnet motionfx")`
oplocate -x `$arg2 + 5.3018063001485887` -y `$arg3 + -4.9133600010430811` $_obj_motionfx
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_motionfx
opexprlanguage -s hscript $_obj_motionfx
opuserdata -n '___Version___' -v '16.5.536' $_obj_motionfx
opcf $_obj_motionfx

# Node $_obj_motionfx_noise_Cam_LookatAuto_clip1 (Chop/channel)
set _obj_motionfx_noise_Cam_LookatAuto_clip1 = `run("opadd -e -n -v channel noise_Cam_LookatAuto_clip1")`
oplocate -x `$arg2 + -1.6943999999999999` -y `$arg3 + 1.7884` $_obj_motionfx_noise_Cam_LookatAuto_clip1
opparm $_obj_motionfx_noise_Cam_LookatAuto_clip1  numchannels ( 1 )
opparm -V 16.5.536 $_obj_motionfx_noise_Cam_LookatAuto_clip1 range ( value ) units ( frames ) gcolor ( 0.89999997615814209 0 0.44999998807907104 ) name0 ( Cam_LookatAuto:t ) size0 ( 3 )
chautoscope $_obj_motionfx_noise_Cam_LookatAuto_clip1 +value0x +value0y +value0z
chalias /obj/motionfx/noise_Cam_LookatAuto_clip1/value0x tx
chalias /obj/motionfx/noise_Cam_LookatAuto_clip1/value0y ty
chalias /obj/motionfx/noise_Cam_LookatAuto_clip1/value0z tz
opset -d off -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a on -o off $_obj_motionfx_noise_Cam_LookatAuto_clip1
opexprlanguage -s hscript $_obj_motionfx_noise_Cam_LookatAuto_clip1
opuserdata -n '___Version___' -v '16.5.536' $_obj_motionfx_noise_Cam_LookatAuto_clip1

# Node $_obj_motionfx_noise1 (Chop/noise)
set _obj_motionfx_noise1 = `run("opadd -e -n -v noise noise1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0.89419999999999999` $_obj_motionfx_noise1
chblockbegin
chadd -t 0 0 $_obj_motionfx_noise1 seed
chkey -t 0 -v 0 -V 0 -m 0 -M 0 -a 0 -A 0 -F '$C' $_obj_motionfx_noise1/seed
chblockend
opparm -V 16.5.536 $_obj_motionfx_noise1 seed ( seed ) period ( 7.5300000000000002 ) amp ( 2.0899999999999999 ) channelname ( '`run("chopls ../noise_Cam_LookatAuto_clip1")`' ) gcolor ( 0.89999997615814209 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a off -o off $_obj_motionfx_noise1
opexprlanguage -s hscript $_obj_motionfx_noise1
opuserdata -n '___Version___' -v '16.5.536' $_obj_motionfx_noise1

# Node $_obj_motionfx_noise_add1 (Chop/math)
set _obj_motionfx_noise_add1 = `run("opadd -e -n -v math noise_add1")`
oplocate -x `$arg2 + -1.6943999999999999` -y `$arg3 + 0` $_obj_motionfx_noise_add1
opparm -V 16.5.536 $_obj_motionfx_noise_add1 chopop ( add ) gcolor ( 0.89999997615814209 0.44999998807907104 0 )
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -a off -o on $_obj_motionfx_noise_add1
opexprlanguage -s hscript $_obj_motionfx_noise_add1
opuserdata -n '___Version___' -v '16.5.536' $_obj_motionfx_noise_add1
oporder -e noise_Cam_LookatAuto_clip1 noise1 noise_add1 
opcf ..
opset -p on $_obj_motionfx
opcf $arg1

# Node $_obj_Cam_lookat (Object/null)
set _obj_Cam_lookat = `run("opadd -e -n -v null Cam_lookat")`
oplocate -x `$arg2 + 2.3999999999999999` -y `$arg3 + -6.1137600000000001` $_obj_Cam_lookat
chblockbegin
chadd -t 0 0 $_obj_Cam_lookat tx
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_lookat/tx
chadd -t 0 0 $_obj_Cam_lookat ty
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_lookat/ty
chadd -t 0 0 $_obj_Cam_lookat tz
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_lookat/tz
chadd -t 0 0 $_obj_Cam_lookat rz
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_lookat/rz
chblockend
opset -S on $_obj_Cam_lookat
opparm -V 16.5.536 $_obj_Cam_lookat t ( tx ty tz ) r ( 0 0 rz ) s ( 1 1 1 )
chlock $_obj_Cam_lookat +rx +ry +sx +sy +sz
chautoscope $_obj_Cam_lookat +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_lookat
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_lookat
opexprlanguage -s hscript $_obj_Cam_lookat
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_lookat
opcf $_obj_Cam_lookat

# Node $_obj_Cam_lookat_control1 (Sop/control)
set _obj_Cam_lookat_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_lookat_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_lookat_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_lookat_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_lookat_control1/colorr
chadd -t 0 0 $_obj_Cam_lookat_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_lookat_control1/colorg
chadd -t 0 0 $_obj_Cam_lookat_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_lookat_control1/colorb
chadd -t 0 0 $_obj_Cam_lookat_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_lookat_control1/scale
chadd -t 0 0 $_obj_Cam_lookat_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_lookat_control1/displayicon
chadd -t 0 0 $_obj_Cam_lookat_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_lookat_control1/controltype
chadd -t 0 0 $_obj_Cam_lookat_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_lookat_control1/orientation
chadd -t 0 0 $_obj_Cam_lookat_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_lookat_control1/shadedmode
chadd -t 0 0 $_obj_Cam_lookat_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_lookat_control1/sizex
chadd -t 0 0 $_obj_Cam_lookat_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_lookat_control1/sizey
chadd -t 0 0 $_obj_Cam_lookat_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_lookat_control1/sizez
chadd -t 0 0 $_obj_Cam_lookat_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_lookat_control1/tx
chadd -t 0 0 $_obj_Cam_lookat_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_lookat_control1/ty
chadd -t 0 0 $_obj_Cam_lookat_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_lookat_control1/tz
chadd -t 0 0 $_obj_Cam_lookat_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_lookat_control1/rx
chadd -t 0 0 $_obj_Cam_lookat_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_lookat_control1/ry
chadd -t 0 0 $_obj_Cam_lookat_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_lookat_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_lookat_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_lookat_control1
opexprlanguage -s hscript $_obj_Cam_lookat_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_lookat_control1

# Node $_obj_Cam_lookat_point1 (Sop/add)
set _obj_Cam_lookat_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_lookat_point1
opparm $_obj_Cam_lookat_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_lookat_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_lookat_point1
opexprlanguage -s hscript $_obj_Cam_lookat_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_lookat_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_lookat
opcf $arg1

# Node $_obj_Cam_Trans (Object/null)
set _obj_Cam_Trans = `run("opadd -e -n -v null Cam_Trans")`
oplocate -x `$arg2 + 0` -y `$arg3 + -4.9183599999999998` $_obj_Cam_Trans
chblockbegin
chadd -t 0 0 $_obj_Cam_Trans tx
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_Trans/tx
chadd -t 0 0 $_obj_Cam_Trans ty
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_Trans/ty
chadd -t 0 6.958333333333333 $_obj_Cam_Trans tz
chkey -t 0 -v 10 -m 0 -a 0.33333333333333331 -A 0.98611111111111116 -T a  -o mM  -F 'bezier()' $_obj_Cam_Trans/tz
chkey -t 2.9583333333333335 -v 21.199999999999999 -m 0 -a 0.98611111111111116 -A 1.333333333333333 -T a  -o mM  -F 'bezier()' $_obj_Cam_Trans/tz
chkey -t 6.958333333333333 -v 4.2000000000000002 -m 0 -a 1.333333333333333 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Cam_Trans/tz
chblockend
opset -S on $_obj_Cam_Trans
opparm -V 16.5.536 $_obj_Cam_Trans t ( tx ty tz ) r ( 0 0 0 ) s ( 1 1 1 ) keeppos ( on )
chlock $_obj_Cam_Trans +rx +ry +rz +sx +sy +sz
chautoscope $_obj_Cam_Trans +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_Trans
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_Trans
opexprlanguage -s hscript $_obj_Cam_Trans
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Trans
opcf $_obj_Cam_Trans

# Node $_obj_Cam_Trans_control1 (Sop/control)
set _obj_Cam_Trans_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_Trans_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_Trans_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_Trans_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_Trans_control1/colorr
chadd -t 0 0 $_obj_Cam_Trans_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_Trans_control1/colorg
chadd -t 0 0 $_obj_Cam_Trans_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_Trans_control1/colorb
chadd -t 0 0 $_obj_Cam_Trans_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_Trans_control1/scale
chadd -t 0 0 $_obj_Cam_Trans_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_Trans_control1/displayicon
chadd -t 0 0 $_obj_Cam_Trans_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_Trans_control1/controltype
chadd -t 0 0 $_obj_Cam_Trans_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_Trans_control1/orientation
chadd -t 0 0 $_obj_Cam_Trans_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_Trans_control1/shadedmode
chadd -t 0 0 $_obj_Cam_Trans_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_Trans_control1/sizex
chadd -t 0 0 $_obj_Cam_Trans_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_Trans_control1/sizey
chadd -t 0 0 $_obj_Cam_Trans_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_Trans_control1/sizez
chadd -t 0 0 $_obj_Cam_Trans_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_Trans_control1/tx
chadd -t 0 0 $_obj_Cam_Trans_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_Trans_control1/ty
chadd -t 0 0 $_obj_Cam_Trans_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_Trans_control1/tz
chadd -t 0 0 $_obj_Cam_Trans_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_Trans_control1/rx
chadd -t 0 0 $_obj_Cam_Trans_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_Trans_control1/ry
chadd -t 0 0 $_obj_Cam_Trans_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_Trans_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_Trans_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Trans_control1
opexprlanguage -s hscript $_obj_Cam_Trans_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Trans_control1

# Node $_obj_Cam_Trans_point1 (Sop/add)
set _obj_Cam_Trans_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_Trans_point1
opparm $_obj_Cam_Trans_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_Trans_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_Trans_point1
opexprlanguage -s hscript $_obj_Cam_Trans_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_Trans_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_Trans
opcf $arg1

# Node $_obj_Cam_up (Object/null)
set _obj_Cam_up = `run("opadd -e -n -v null Cam_up")`
oplocate -x `$arg2 + 2.3999999999999999` -y `$arg3 + -7.3091599999999994` $_obj_Cam_up
opset -S on $_obj_Cam_up
opparm -V 16.5.536 $_obj_Cam_up t ( 0 2.2017776966094971 0 ) r ( 0 0 0 ) s ( 1 1 1 )
chlock $_obj_Cam_up +tx +ty +tz +rx +ry +rz +sx +sy +sz
chautoscope $_obj_Cam_up +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_up
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_up
opexprlanguage -s hscript $_obj_Cam_up
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_up
opcf $_obj_Cam_up

# Node $_obj_Cam_up_control1 (Sop/control)
set _obj_Cam_up_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_up_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_up_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_up_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_up_control1/colorr
chadd -t 0 0 $_obj_Cam_up_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_up_control1/colorg
chadd -t 0 0 $_obj_Cam_up_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_up_control1/colorb
chadd -t 0 0 $_obj_Cam_up_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_up_control1/scale
chadd -t 0 0 $_obj_Cam_up_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_up_control1/displayicon
chadd -t 0 0 $_obj_Cam_up_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_up_control1/controltype
chadd -t 0 0 $_obj_Cam_up_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_up_control1/orientation
chadd -t 0 0 $_obj_Cam_up_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_up_control1/shadedmode
chadd -t 0 0 $_obj_Cam_up_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_up_control1/sizex
chadd -t 0 0 $_obj_Cam_up_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_up_control1/sizey
chadd -t 0 0 $_obj_Cam_up_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_up_control1/sizez
chadd -t 0 0 $_obj_Cam_up_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_up_control1/tx
chadd -t 0 0 $_obj_Cam_up_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_up_control1/ty
chadd -t 0 0 $_obj_Cam_up_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_up_control1/tz
chadd -t 0 0 $_obj_Cam_up_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_up_control1/rx
chadd -t 0 0 $_obj_Cam_up_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_up_control1/ry
chadd -t 0 0 $_obj_Cam_up_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_up_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_up_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_up_control1
opexprlanguage -s hscript $_obj_Cam_up_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_up_control1

# Node $_obj_Cam_up_point1 (Sop/add)
set _obj_Cam_up_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_up_point1
opparm $_obj_Cam_up_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_up_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_up_point1
opexprlanguage -s hscript $_obj_Cam_up_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_up_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_up
opcf $arg1

# Node $_obj_Rotate_Vert (Object/null)
set _obj_Rotate_Vert = `run("opadd -e -n -v null Rotate_Vert")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.3908` $_obj_Rotate_Vert
chblockbegin
chadd -t 0 6.958333333333333 $_obj_Rotate_Vert rx
chkey -t 0 -v 0 -m 0 -a 0.33333333333333331 -A 0.65277777777777768 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Vert/rx
chkey -t 1.9583333333333333 -v -28.920350556132693 -m -19.045185079210786 -a 12.449399404294878 -A 12.714280242684133 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Vert/rx
chkey -t 3.958333333333333 -v -68.434919353731644 -m 0 -a 0.66666666666666663 -A 1 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Vert/rx
chkey -t 6.958333333333333 -v -15.293417018888102 -m 0 -a 1 -A 0.33333333333333331 -T a  -o mM  -F 'bezier()' $_obj_Rotate_Vert/rx
chblockend
opset -S on $_obj_Rotate_Vert
opparm -V 16.5.536 $_obj_Rotate_Vert t ( 0 0 0 ) r ( rx 0 0 ) s ( 1 1 1 )
chlock $_obj_Rotate_Vert +tx +ty +tz +ry +rz +sx +sy +sz
chautoscope $_obj_Rotate_Vert +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Rotate_Vert
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Rotate_Vert
opexprlanguage -s hscript $_obj_Rotate_Vert
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Vert
opcf $_obj_Rotate_Vert

# Node $_obj_Rotate_Vert_control1 (Sop/control)
set _obj_Rotate_Vert_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Rotate_Vert_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Rotate_Vert_control1
chblockbegin
chadd -t 0 0 $_obj_Rotate_Vert_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Rotate_Vert_control1/colorr
chadd -t 0 0 $_obj_Rotate_Vert_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Rotate_Vert_control1/colorg
chadd -t 0 0 $_obj_Rotate_Vert_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Rotate_Vert_control1/colorb
chadd -t 0 0 $_obj_Rotate_Vert_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Rotate_Vert_control1/scale
chadd -t 0 0 $_obj_Rotate_Vert_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Rotate_Vert_control1/displayicon
chadd -t 0 0 $_obj_Rotate_Vert_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Rotate_Vert_control1/controltype
chadd -t 0 0 $_obj_Rotate_Vert_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Rotate_Vert_control1/orientation
chadd -t 0 0 $_obj_Rotate_Vert_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Rotate_Vert_control1/shadedmode
chadd -t 0 0 $_obj_Rotate_Vert_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Rotate_Vert_control1/sizex
chadd -t 0 0 $_obj_Rotate_Vert_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Rotate_Vert_control1/sizey
chadd -t 0 0 $_obj_Rotate_Vert_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Rotate_Vert_control1/sizez
chadd -t 0 0 $_obj_Rotate_Vert_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Rotate_Vert_control1/tx
chadd -t 0 0 $_obj_Rotate_Vert_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Rotate_Vert_control1/ty
chadd -t 0 0 $_obj_Rotate_Vert_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Rotate_Vert_control1/tz
chadd -t 0 0 $_obj_Rotate_Vert_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Rotate_Vert_control1/rx
chadd -t 0 0 $_obj_Rotate_Vert_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Rotate_Vert_control1/ry
chadd -t 0 0 $_obj_Rotate_Vert_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Rotate_Vert_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Rotate_Vert_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Rotate_Vert_control1
opexprlanguage -s hscript $_obj_Rotate_Vert_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Vert_control1

# Node $_obj_Rotate_Vert_point1 (Sop/add)
set _obj_Rotate_Vert_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Rotate_Vert_point1
opparm $_obj_Rotate_Vert_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Rotate_Vert_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Rotate_Vert_point1
opexprlanguage -s hscript $_obj_Rotate_Vert_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Rotate_Vert_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Rotate_Vert
opcf $arg1

# Node $_obj_Cam_LookatAuto (Object/null)
set _obj_Cam_LookatAuto = `run("opadd -e -n -v null Cam_LookatAuto")`
oplocate -x `$arg2 + 2.3999999999999999` -y `$arg3 + -4.9183599999999998` $_obj_Cam_LookatAuto
opset -S on $_obj_Cam_LookatAuto
chautoscope $_obj_Cam_LookatAuto +tx +ty +tz +rx +ry +rz +sx +sy +sz
opcolor -c 0.14499999582767487 0.66699999570846558 0.55699998140335083 $_obj_Cam_LookatAuto
opset -d off -r off -h off -f off -y on -t off -l off -s off -u off -F off -c on -e on -b off -x off $_obj_Cam_LookatAuto
opexprlanguage -s hscript $_obj_Cam_LookatAuto
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_LookatAuto
opcf $_obj_Cam_LookatAuto

# Node $_obj_Cam_LookatAuto_control1 (Sop/control)
set _obj_Cam_LookatAuto_control1 = `run("opadd -e -n -v control control1")`
oplocate -x `$arg2 + 0.5` -y `$arg3 + 1` $_obj_Cam_LookatAuto_control1
opspareds '    parm {         name    "color"         baseparm         label   "Color"         export  none     }     parm {         name    "scale"         baseparm         label   "Scale"         export  none     }     parm {         name    "displayicon"         baseparm         label   "Display"         export  all     }     parm {         name    "controltype"         baseparm         label   "Control Type"         export  all     }     parm {         name    "orientation"         baseparm         label   "Orientation"         export  all     }     parm {         name    "shadedmode"         baseparm         label   "Shaded Mode"         export  all     }     parm {         name    "sizex"         label   "sizex"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizey"         label   "sizey"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "sizez"         label   "sizez"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tx"         label   "tx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ty"         label   "ty"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "tz"         label   "tz"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rx"         label   "rx"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "ry"         label   "ry"         type    float         default { "0" }         range   { 0 10 }     }     parm {         name    "rz"         label   "rz"         type    float         default { "0" }         range   { 0 10 }     } ' $_obj_Cam_LookatAuto_control1
chblockbegin
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 colorr
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorr"), 0.7)' $_obj_Cam_LookatAuto_control1/colorr
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 colorg
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorg"), 0.7)' $_obj_Cam_LookatAuto_control1/colorg
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 colorb
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'if (ch("../use_dcolor"), ch("../dcolorb"), 0.7)' $_obj_Cam_LookatAuto_control1/colorb
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 scale
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geoscale")' $_obj_Cam_LookatAuto_control1/scale
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 displayicon
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../displayicon")' $_obj_Cam_LookatAuto_control1/displayicon
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 controltype
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../controltype")' $_obj_Cam_LookatAuto_control1/controltype
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 orientation
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../orientation")' $_obj_Cam_LookatAuto_control1/orientation
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 shadedmode
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../shadedmode")' $_obj_Cam_LookatAuto_control1/shadedmode
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 sizex
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizex")' $_obj_Cam_LookatAuto_control1/sizex
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 sizey
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizey")' $_obj_Cam_LookatAuto_control1/sizey
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 sizez
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../geosizez")' $_obj_Cam_LookatAuto_control1/sizez
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 tx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterx")' $_obj_Cam_LookatAuto_control1/tx
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 ty
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocentery")' $_obj_Cam_LookatAuto_control1/ty
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 tz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../geocenterz")' $_obj_Cam_LookatAuto_control1/tz
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 rx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatex")' $_obj_Cam_LookatAuto_control1/rx
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 ry
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatey")' $_obj_Cam_LookatAuto_control1/ry
chadd -t 0 0 $_obj_Cam_LookatAuto_control1 rz
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../georotatez")' $_obj_Cam_LookatAuto_control1/rz
chblockend
opparm -V 16.5.536 $_obj_Cam_LookatAuto_control1 color ( colorr colorg colorb ) scale ( scale ) displayicon ( displayicon ) controltype ( controltype ) orientation ( orientation ) shadedmode ( shadedmode ) sizex ( sizex ) sizey ( sizey ) sizez ( sizez ) tx ( tx ) ty ( ty ) tz ( tz ) rx ( rx ) ry ( ry ) rz ( rz )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_LookatAuto_control1
opexprlanguage -s hscript $_obj_Cam_LookatAuto_control1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_LookatAuto_control1

# Node $_obj_Cam_LookatAuto_point1 (Sop/add)
set _obj_Cam_LookatAuto_point1 = `run("opadd -e -n -v add point1")`
oplocate -x `$arg2 + 2.5` -y `$arg3 + 1` $_obj_Cam_LookatAuto_point1
opparm $_obj_Cam_LookatAuto_point1  points ( 1 ) prims ( 1 )
opparm -V 16.5.536 $_obj_Cam_LookatAuto_point1 usept0 ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_Cam_LookatAuto_point1
opexprlanguage -s hscript $_obj_Cam_LookatAuto_point1
opuserdata -n '___Version___' -v '16.5.536' $_obj_Cam_LookatAuto_point1
oporder -e control1 point1 
opcf ..
opset -p on $_obj_Cam_LookatAuto

opcf $arg1
opcf $_obj_CAM_XFORM
opcf ..
opcf $arg1
opwire -n $_obj_Rotate_Vert -0 $_obj_Cam_Roll
opcf $_obj_Cam_Roll
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Trans -0 $_obj_Cam_Lookat
opcf $_obj_Cam_Lookat
opcf $_obj_Cam_Lookat_constraints
opwire -n $_obj_Cam_Lookat_constraints_getworldspace -0 $_obj_Cam_Lookat_constraints_lookat
opwire -n $_obj_Cam_Lookat_constraints_Cam_lookat -1 $_obj_Cam_Lookat_constraints_lookat
opwire -n $_obj_Cam_Lookat_constraints_Cam_up -2 $_obj_Cam_Lookat_constraints_lookat
opcf ..
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Offset -0 $_obj_Cam_Auto
opcf $_obj_Cam_Auto
opcf ..
opcf $arg1
opwire -n $_obj_CAM_XFORM -0 $_obj_Rotate_Horiz
opcf $_obj_Rotate_Horiz
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Auto -0 $_obj_CAM_RIGGED
opcf $_obj_CAM_RIGGED
opwire -n $_obj_CAM_RIGGED_file1 -0 $_obj_CAM_RIGGED_xform1
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Lookat -0 $_obj_Cam_Offset
opcf $_obj_Cam_Offset
opcf ..
opcf $arg1
opcf $_obj_motionfx
opwire -n $_obj_motionfx_noise_Cam_LookatAuto_clip1 -0 $_obj_motionfx_noise_add1
opwire -n $_obj_motionfx_noise1 -1 $_obj_motionfx_noise_add1
opcf ..
opcf $arg1
opwire -n $_obj_Cam_LookatAuto -0 $_obj_Cam_lookat
opcf $_obj_Cam_lookat
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Roll -0 $_obj_Cam_Trans
opcf $_obj_Cam_Trans
opcf ..
opcf $arg1
opwire -n $_obj_Cam_lookat -0 $_obj_Cam_up
opcf $_obj_Cam_up
opcf ..
opcf $arg1
opwire -n $_obj_Rotate_Horiz -0 $_obj_Rotate_Vert
opcf $_obj_Rotate_Vert
opcf ..
opcf $arg1
opwire -n $_obj_Cam_Roll -0 $_obj_Cam_LookatAuto
opcf $_obj_Cam_LookatAuto
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_CAM_RIGGED
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_CAM_XFORM
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
