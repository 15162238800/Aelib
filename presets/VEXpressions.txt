attribwrangle/snippet
    ae_include
    #include <aevex.vfl>

attribwrangle/snippet
    ae_colour
    @Cd = 1;
    @Alpha = 1.0;

attribwrangle/snippet
    pt/numpt
	f@t = float(@ptnum)/(@numpt-1);

attribwrangle/snippet
    ae_NFromP
    @N = normalize(@P);

attribwrangle/snippet
    ae_chramp
    @Cd = chramp("ramp", f@u); 

attribwrangle/snippet
    ae_delpts  
    // remove points
    if(rand(@ptnum + 978.88) < 0.5){
        removepoint(0, @ptnum);
    }

attribwrangle/snippet
    ae_rotateprim  
    // rotate prim around given center
    float a = @Time * @primnum * 20;
    vector4 q = quaternion(radians(a), set(0,1,0));

    vector cen = set(0);
    @P -= cen;
    @P = qrotate(q, @P);
    @P += cen;

attribwrangle/snippet
    ae_intrinsic_xform
    matrix3 m = ident();
    float angle = @Time;
    rotate(m, angle, set(0,1,0));
    setprimintrinsic(0, "transform", @primnum, m);

attribwrangle/snippet
    ae_delprims  
    // remove prims
    if(rand(@primnum + 978.88) < 0.5){
        removeprim(0, @primnum, 1);
    }

attribwrangle/snippet
    ae_curveuv  
    // Assigns u-values to all points in all prims.
    int v = pointvertex(0, @ptnum);
    int ind = vertexprimindex(0, v);
    int npts = len(primpoints(0, @primnum));
    float u = float(ind) / (npts-1);